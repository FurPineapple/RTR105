Python 3.6.5 (default, Apr  1 2018, 05:46:30) 
[GCC 7.3.0] on linux
Type "copyright", "credits" or "license()" for more information.
>>> vars()
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>}
>>> import sys
>>>  sys.path.append('/usr/local/anaconda3/lib/python3.6/site-packages')
SyntaxError: unexpected indent
>>> sys.path.append('/usr/local/anaconda3/lib/python3.6/site-packages')
>>> from numpy import*
>>> vars()
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 'sys': <module 'sys' (built-in)>, 'add_newdocs': <module 'numpy.add_newdocs' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/add_newdocs.py'>, 'ModuleDeprecationWarning': <class 'numpy._globals.ModuleDeprecationWarning'>, 'VisibleDeprecationWarning': <class 'numpy._globals.VisibleDeprecationWarning'>, '__version__': '1.14.0', 'pkgload': <function pkgload at 0x7fed4e535e18>, 'PackageLoader': <class 'numpy._import_tools.PackageLoader'>, 'show_config': <function show at 0x7fed4cd99ae8>, 'char': <module 'numpy.core.defchararray' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/defchararray.py'>, 'rec': <module 'numpy.core.records' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/records.py'>, 'memmap': <class 'numpy.core.memmap.memmap'>, 'newaxis': None, 'ndarray': <class 'numpy.ndarray'>, 'flatiter': <class 'numpy.flatiter'>, 'nditer': <class 'numpy.nditer'>, 'nested_iters': <built-in function nested_iters>, 'ufunc': <class 'numpy.ufunc'>, 'arange': <built-in function arange>, 'array': <built-in function array>, 'zeros': <built-in function zeros>, 'count_nonzero': <function count_nonzero at 0x7fed46477730>, 'empty': <built-in function empty>, 'broadcast': <class 'numpy.broadcast'>, 'dtype': <class 'numpy.dtype'>, 'fromstring': <built-in function fromstring>, 'fromfile': <built-in function fromfile>, 'frombuffer': <built-in function frombuffer>, 'int_asbuffer': <built-in function int_asbuffer>, 'where': <built-in function where>, 'argwhere': <function argwhere at 0x7fed46477ae8>, 'copyto': <built-in function copyto>, 'concatenate': <built-in function concatenate>, 'fastCopyAndTranspose': <built-in function _fastCopyAndTranspose>, 'lexsort': <built-in function lexsort>, 'set_numeric_ops': <built-in function set_numeric_ops>, 'can_cast': <built-in function can_cast>, 'promote_types': <built-in function promote_types>, 'min_scalar_type': <built-in function min_scalar_type>, 'result_type': <built-in function result_type>, 'asarray': <function asarray at 0x7fed464777b8>, 'asanyarray': <function asanyarray at 0x7fed46477840>, 'ascontiguousarray': <function ascontiguousarray at 0x7fed464778c8>, 'asfortranarray': <function asfortranarray at 0x7fed46477950>, 'isfortran': <function isfortran at 0x7fed46477a60>, 'empty_like': <built-in function empty_like>, 'zeros_like': <function zeros_like at 0x7fed46477488>, 'ones_like': <function ones_like at 0x7fed46477598>, 'correlate': <function correlate at 0x7fed46477c80>, 'convolve': <function convolve at 0x7fed46477d08>, 'inner': <built-in function inner>, 'dot': <built-in function dot>, 'outer': <function outer at 0x7fed46477d90>, 'vdot': <built-in function vdot>, 'roll': <function roll at 0x7fed46477ea0>, 'rollaxis': <function rollaxis at 0x7fed46477f28>, 'moveaxis': <function moveaxis at 0x7fed464020d0>, 'cross': <function cross at 0x7fed464021e0>, 'tensordot': <function tensordot at 0x7fed46477e18>, 'little_endian': True, 'require': <function require at 0x7fed464779d8>, 'fromiter': <built-in function fromiter>, 'array_equal': <function array_equal at 0x7fed464027b8>, 'array_equiv': <function array_equiv at 0x7fed46402840>, 'indices': <function indices at 0x7fed46402268>, 'fromfunction': <function fromfunction at 0x7fed464022f0>, 'isclose': <function isclose at 0x7fed46402730>, 'load': <function load at 0x7fed45e3ed90>, 'loads': <built-in function loads>, 'isscalar': <function isscalar at 0x7fed46402378>, 'binary_repr': <function binary_repr at 0x7fed46402400>, 'base_repr': <function base_repr at 0x7fed46402488>, 'ones': <function ones at 0x7fed46477510>, 'identity': <function identity at 0x7fed46402620>, 'allclose': <function allclose at 0x7fed464026a8>, 'compare_chararrays': <built-in function compare_chararrays>, 'putmask': <built-in function putmask>, 'seterr': <function seterr at 0x7fed464028c8>, 'geterr': <function geterr at 0x7fed46402950>, 'setbufsize': <function setbufsize at 0x7fed464029d8>, 'getbufsize': <function getbufsize at 0x7fed46402a60>, 'seterrcall': <function seterrcall at 0x7fed46402ae8>, 'geterrcall': <function geterrcall at 0x7fed46402b70>, 'errstate': <class 'numpy.core.numeric.errstate'>, 'flatnonzero': <function flatnonzero at 0x7fed46477b70>, 'Inf': inf, 'inf': inf, 'infty': inf, 'Infinity': inf, 'nan': nan, 'NaN': nan, 'False_': False, 'True_': True, 'bitwise_not': <ufunc 'invert'>, 'CLIP': 0, 'RAISE': 2, 'WRAP': 1, 'MAXDIMS': 32, 'BUFSIZE': 8192, 'ALLOW_THREADS': 1, 'ComplexWarning': <class 'numpy.core.numeric.ComplexWarning'>, 'full': <function full at 0x7fed46477620>, 'full_like': <function full_like at 0x7fed464776a8>, 'matmul': <built-in function matmul>, 'shares_memory': <built-in function shares_memory>, 'may_share_memory': <built-in function may_share_memory>, 'MAY_SHARE_BOUNDS': 0, 'MAY_SHARE_EXACT': -1, 'TooHardError': <class 'numpy.core._internal.TooHardError'>, 'AxisError': <class 'numpy.core._internal.AxisError'>, 'alen': <function alen at 0x7fed46410950>, 'all': <function all at 0x7fed46410620>, 'alltrue': <function alltrue at 0x7fed46410510>, 'amax': <function amax at 0x7fed46410840>, 'amin': <function amin at 0x7fed464108c8>, 'any': <function any at 0x7fed46410598>, 'argmax': <function argmax at 0x7fed4640fc80>, 'argmin': <function argmin at 0x7fed4640fd08>, 'argpartition': <function argpartition at 0x7fed4640fae8>, 'argsort': <function argsort at 0x7fed4640fbf8>, 'around': <function around at 0x7fed46410c80>, 'choose': <function choose at 0x7fed4640f7b8>, 'clip': <function clip at 0x7fed464102f0>, 'compress': <function compress at 0x7fed46410268>, 'cumprod': <function cumprod at 0x7fed46410a60>, 'cumproduct': <function cumproduct at 0x7fed46410730>, 'cumsum': <function cumsum at 0x7fed464106a8>, 'diagonal': <function diagonal at 0x7fed4640ff28>, 'mean': <function mean at 0x7fed46410d90>, 'ndim': <function ndim at 0x7fed46410ae8>, 'nonzero': <function nonzero at 0x7fed46410158>, 'partition': <function partition at 0x7fed4640fa60>, 'prod': <function prod at 0x7fed464109d8>, 'product': <function product at 0x7fed46410400>, 'ptp': <function ptp at 0x7fed464107b8>, 'put': <function put at 0x7fed4640f8c8>, 'rank': <function rank at 0x7fed46410b70>, 'ravel': <function ravel at 0x7fed464100d0>, 'repeat': <function repeat at 0x7fed4640f840>, 'reshape': <function reshape at 0x7fed4640f730>, 'resize': <function resize at 0x7fed4640fe18>, 'round_': <function round_ at 0x7fed46410d08>, 'searchsorted': <function searchsorted at 0x7fed4640fd90>, 'shape': <function shape at 0x7fed464101e0>, 'size': <function size at 0x7fed46410bf8>, 'sometrue': <function sometrue at 0x7fed46410488>, 'sort': <function sort at 0x7fed4640fb70>, 'squeeze': <function squeeze at 0x7fed4640fea0>, 'std': <function std at 0x7fed46410e18>, 'sum': <function sum at 0x7fed46410378>, 'swapaxes': <function swapaxes at 0x7fed4640f950>, 'take': <function take at 0x7fed4640f6a8>, 'trace': <function trace at 0x7fed46410048>, 'transpose': <function transpose at 0x7fed4640f9d8>, 'var': <function var at 0x7fed46410ea0>, 'frompyfunc': <built-in function frompyfunc>, 'seterrobj': <built-in function seterrobj>, 'geterrobj': <built-in function geterrobj>, 'absolute': <ufunc 'absolute'>, 'add': <ufunc 'add'>, 'arccos': <ufunc 'arccos'>, 'arccosh': <ufunc 'arccosh'>, 'arcsin': <ufunc 'arcsin'>, 'arcsinh': <ufunc 'arcsinh'>, 'arctan': <ufunc 'arctan'>, 'arctan2': <ufunc 'arctan2'>, 'arctanh': <ufunc 'arctanh'>, 'bitwise_and': <ufunc 'bitwise_and'>, 'bitwise_or': <ufunc 'bitwise_or'>, 'bitwise_xor': <ufunc 'bitwise_xor'>, 'cbrt': <ufunc 'cbrt'>, 'ceil': <ufunc 'ceil'>, 'conjugate': <ufunc 'conjugate'>, 'copysign': <ufunc 'copysign'>, 'cos': <ufunc 'cos'>, 'cosh': <ufunc 'cosh'>, 'deg2rad': <ufunc 'deg2rad'>, 'degrees': <ufunc 'degrees'>, 'divmod': <ufunc 'divmod'>, 'equal': <ufunc 'equal'>, 'exp': <ufunc 'exp'>, 'exp2': <ufunc 'exp2'>, 'expm1': <ufunc 'expm1'>, 'fabs': <ufunc 'fabs'>, 'float_power': <ufunc 'float_power'>, 'floor': <ufunc 'floor'>, 'floor_divide': <ufunc 'floor_divide'>, 'fmax': <ufunc 'fmax'>, 'fmin': <ufunc 'fmin'>, 'fmod': <ufunc 'fmod'>, 'frexp': <ufunc 'frexp'>, 'greater': <ufunc 'greater'>, 'greater_equal': <ufunc 'greater_equal'>, 'heaviside': <ufunc 'heaviside'>, 'hypot': <ufunc 'hypot'>, 'invert': <ufunc 'invert'>, 'isfinite': <ufunc 'isfinite'>, 'isinf': <ufunc 'isinf'>, 'isnan': <ufunc 'isnan'>, 'isnat': <ufunc 'isnat'>, 'ldexp': <ufunc 'ldexp'>, 'left_shift': <ufunc 'left_shift'>, 'less': <ufunc 'less'>, 'less_equal': <ufunc 'less_equal'>, 'log': <ufunc 'log'>, 'log10': <ufunc 'log10'>, 'log1p': <ufunc 'log1p'>, 'log2': <ufunc 'log2'>, 'logaddexp': <ufunc 'logaddexp'>, 'logaddexp2': <ufunc 'logaddexp2'>, 'logical_and': <ufunc 'logical_and'>, 'logical_not': <ufunc 'logical_not'>, 'logical_or': <ufunc 'logical_or'>, 'logical_xor': <ufunc 'logical_xor'>, 'maximum': <ufunc 'maximum'>, 'minimum': <ufunc 'minimum'>, 'modf': <ufunc 'modf'>, 'multiply': <ufunc 'multiply'>, 'negative': <ufunc 'negative'>, 'nextafter': <ufunc 'nextafter'>, 'not_equal': <ufunc 'not_equal'>, 'positive': <ufunc 'positive'>, 'power': <ufunc 'power'>, 'rad2deg': <ufunc 'rad2deg'>, 'radians': <ufunc 'radians'>, 'reciprocal': <ufunc 'reciprocal'>, 'remainder': <ufunc 'remainder'>, 'right_shift': <ufunc 'right_shift'>, 'rint': <ufunc 'rint'>, 'sign': <ufunc 'sign'>, 'signbit': <ufunc 'signbit'>, 'sin': <ufunc 'sin'>, 'sinh': <ufunc 'sinh'>, 'spacing': <ufunc 'spacing'>, 'sqrt': <ufunc 'sqrt'>, 'square': <ufunc 'square'>, 'subtract': <ufunc 'subtract'>, 'tan': <ufunc 'tan'>, 'tanh': <ufunc 'tanh'>, 'true_divide': <ufunc 'true_divide'>, 'trunc': <ufunc 'trunc'>, 'pi': 3.141592653589793, 'e': 2.718281828459045, 'euler_gamma': 0.5772156649015329, 'ERR_IGNORE': 0, 'ERR_WARN': 1, 'ERR_CALL': 3, 'ERR_RAISE': 2, 'ERR_PRINT': 4, 'ERR_LOG': 5, 'ERR_DEFAULT': 521, 'SHIFT_DIVIDEBYZERO': 0, 'SHIFT_OVERFLOW': 3, 'SHIFT_UNDERFLOW': 6, 'SHIFT_INVALID': 9, 'FPE_DIVIDEBYZERO': 1, 'FPE_OVERFLOW': 2, 'FPE_UNDERFLOW': 4, 'FPE_INVALID': 8, 'FLOATING_POINT_SUPPORT': 1, 'UFUNC_PYVALS_NAME': 'UFUNC_PYVALS', 'UFUNC_BUFSIZE_DEFAULT': 8192, 'PINF': inf, 'NINF': -inf, 'PZERO': 0.0, 'NZERO': -0.0, 'NAN': nan, 'divide': <ufunc 'true_divide'>, 'conj': <ufunc 'conjugate'>, 'mod': <ufunc 'remainder'>, 'sctypeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'sctypeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'typeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'typeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'sctypes': {'int': [<class 'numpy.int8'>, <class 'numpy.int16'>, <class 'numpy.int32'>, <class 'numpy.int64'>], 'uint': [<class 'numpy.uint8'>, <class 'numpy.uint16'>, <class 'numpy.uint32'>, <class 'numpy.uint64'>], 'float': [<class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>], 'complex': [<class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>], 'others': [<class 'bool'>, <class 'object'>, <class 'bytes'>, <class 'str'>, <class 'numpy.void'>]}, 'ScalarType': (<class 'int'>, <class 'float'>, <class 'complex'>, <class 'int'>, <class 'bool'>, <class 'bytes'>, <class 'str'>, <class 'memoryview'>, <class 'numpy.bool_'>, <class 'numpy.int8'>, <class 'numpy.uint8'>, <class 'numpy.int16'>, <class 'numpy.uint16'>, <class 'numpy.int32'>, <class 'numpy.uint32'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>, <class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>, <class 'numpy.object_'>, <class 'numpy.bytes_'>, <class 'numpy.str_'>, <class 'numpy.void'>, <class 'numpy.datetime64'>, <class 'numpy.timedelta64'>), 'obj2sctype': <function obj2sctype at 0x7fed4646bd08>, 'cast': {<class 'numpy.bool_'>: <function <lambda> at 0x7fed46472158>, <class 'numpy.int8'>: <function <lambda> at 0x7fed464721e0>, <class 'numpy.uint8'>: <function <lambda> at 0x7fed46472268>, <class 'numpy.int16'>: <function <lambda> at 0x7fed464722f0>, <class 'numpy.uint16'>: <function <lambda> at 0x7fed46472378>, <class 'numpy.int32'>: <function <lambda> at 0x7fed46472400>, <class 'numpy.uint32'>: <function <lambda> at 0x7fed46472488>, <class 'numpy.int64'>: <function <lambda> at 0x7fed46472510>, <class 'numpy.uint64'>: <function <lambda> at 0x7fed46472598>, <class 'numpy.int64'>: <function <lambda> at 0x7fed46472620>, <class 'numpy.uint64'>: <function <lambda> at 0x7fed464726a8>, <class 'numpy.float16'>: <function <lambda> at 0x7fed46472730>, <class 'numpy.float32'>: <function <lambda> at 0x7fed464727b8>, <class 'numpy.float64'>: <function <lambda> at 0x7fed46472840>, <class 'numpy.float128'>: <function <lambda> at 0x7fed464728c8>, <class 'numpy.complex64'>: <function <lambda> at 0x7fed46472950>, <class 'numpy.complex128'>: <function <lambda> at 0x7fed464729d8>, <class 'numpy.complex256'>: <function <lambda> at 0x7fed46472a60>, <class 'numpy.object_'>: <function <lambda> at 0x7fed46472ae8>, <class 'numpy.bytes_'>: <function <lambda> at 0x7fed46472b70>, <class 'numpy.str_'>: <function <lambda> at 0x7fed46472bf8>, <class 'numpy.void'>: <function <lambda> at 0x7fed46472c80>, <class 'numpy.datetime64'>: <function <lambda> at 0x7fed46472d08>, <class 'numpy.timedelta64'>: <function <lambda> at 0x7fed46472d90>}, 'nbytes': {<class 'numpy.bool_'>: 1, <class 'numpy.int8'>: 1, <class 'numpy.uint8'>: 1, <class 'numpy.int16'>: 2, <class 'numpy.uint16'>: 2, <class 'numpy.int32'>: 4, <class 'numpy.uint32'>: 4, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.float16'>: 2, <class 'numpy.float32'>: 4, <class 'numpy.float64'>: 8, <class 'numpy.float128'>: 16, <class 'numpy.complex64'>: 8, <class 'numpy.complex128'>: 16, <class 'numpy.complex256'>: 32, <class 'numpy.object_'>: 8, <class 'numpy.bytes_'>: 0, <class 'numpy.str_'>: 0, <class 'numpy.void'>: 0, <class 'numpy.datetime64'>: 8, <class 'numpy.timedelta64'>: 8}, 'sctype2char': <function sctype2char at 0x7fed464720d0>, 'maximum_sctype': <function maximum_sctype at 0x7fed4646bbf8>, 'issctype': <function issctype at 0x7fed4646bc80>, 'typecodes': {'Character': 'c', 'Integer': 'bhilqp', 'UnsignedInteger': 'BHILQP', 'Float': 'efdg', 'Complex': 'FDG', 'AllInteger': 'bBhHiIlLqQpP', 'AllFloat': 'efdgFDG', 'Datetime': 'Mm', 'All': '?bhilqpBHILQPefdgFDGSUVOMm'}, 'find_common_type': <function find_common_type at 0x7fed464687b8>, 'issubdtype': <function issubdtype at 0x7fed4646bea0>, 'datetime_data': <built-in function datetime_data>, 'datetime_as_string': <built-in function datetime_as_string>, 'busday_offset': <built-in function busday_offset>, 'busday_count': <built-in function busday_count>, 'is_busday': <built-in function is_busday>, 'busdaycalendar': <class 'numpy.busdaycalendar'>, 'byte': <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'uint': <class 'numpy.uint64'>, 'intp': <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'long': <class 'int'>, 'longlong': <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'double': <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'cdouble': <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'unicode': <class 'str'>, 'void': <class 'numpy.void'>, 'generic': <class 'numpy.generic'>, 'number': <class 'numpy.number'>, 'integer': <class 'numpy.integer'>, 'inexact': <class 'numpy.inexact'>, 'signedinteger': <class 'numpy.signedinteger'>, 'unsignedinteger': <class 'numpy.unsignedinteger'>, 'floating': <class 'numpy.floating'>, 'complexfloating': <class 'numpy.complexfloating'>, 'flexible': <class 'numpy.flexible'>, 'character': <class 'numpy.character'>, 'bool8': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'array2string': <function array2string at 0x7fed46416950>, 'array_str': <function array_str at 0x7fed46423d08>, 'array_repr': <function array_repr at 0x7fed46423c80>, 'set_string_function': <function set_string_function at 0x7fed46423d90>, 'set_printoptions': <function set_printoptions at 0x7fed46416488>, 'get_printoptions': <function get_printoptions at 0x7fed46416510>, 'format_float_positional': <function format_float_positional at 0x7fed46416f28>, 'format_float_scientific': <function format_float_scientific at 0x7fed46416bf8>, 'record': <class 'numpy.record'>, 'recarray': <class 'numpy.recarray'>, 'format_parser': <class 'numpy.core.records.format_parser'>, 'chararray': <class 'numpy.core.defchararray.chararray'>, 'logspace': <function logspace at 0x7fed463c4ea0>, 'linspace': <function linspace at 0x7fed463c4e18>, 'geomspace': <function geomspace at 0x7fed463c4f28>, 'MachAr': <class 'numpy.core.machar.MachAr'>, 'finfo': <class 'numpy.core.getlimits.finfo'>, 'iinfo': <class 'numpy.core.getlimits.iinfo'>, 'atleast_1d': <function atleast_1d at 0x7fed463c8d08>, 'atleast_2d': <function atleast_2d at 0x7fed463d42f0>, 'atleast_3d': <function atleast_3d at 0x7fed463d4378>, 'block': <function block at 0x7fed463d46a8>, 'hstack': <function hstack at 0x7fed463d4488>, 'stack': <function stack at 0x7fed463d4510>, 'vstack': <function vstack at 0x7fed463d4400>, 'einsum': <function einsum at 0x7fed463d4b70>, 'einsum_path': <function einsum_path at 0x7fed463d4ae8>, 'matrix': <class 'numpy.matrixlib.defmatrix.matrix'>, 'bmat': <function bmat at 0x7fed46286620>, 'mat': <function asmatrix at 0x7fed462ff2f0>, 'asmatrix': <function asmatrix at 0x7fed462ff2f0>, 'emath': <module 'numpy.lib.scimath' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/lib/scimath.py'>, 'math': <module 'math' (built-in)>, 'tracemalloc_domain': 389047, 'iscomplexobj': <function iscomplexobj at 0x7fed462db730>, 'isrealobj': <function isrealobj at 0x7fed462db7b8>, 'imag': <function imag at 0x7fed462db598>, 'iscomplex': <function iscomplex at 0x7fed462db620>, 'isreal': <function isreal at 0x7fed462db6a8>, 'nan_to_num': <function nan_to_num at 0x7fed462db8c8>, 'real': <function real at 0x7fed462db510>, 'real_if_close': <function real_if_close at 0x7fed462db950>, 'typename': <function typename at 0x7fed462dba60>, 'asfarray': <function asfarray at 0x7fed462db488>, 'mintypecode': <function mintypecode at 0x7fed476e8a60>, 'asscalar': <function asscalar at 0x7fed462db9d8>, 'common_type': <function common_type at 0x7fed462dbae8>, 'ravel_multi_index': <built-in function ravel_multi_index>, 'unravel_index': <built-in function unravel_index>, 'mgrid': <numpy.lib.index_tricks.nd_grid object at 0x7fed462dada0>, 'ogrid': <numpy.lib.index_tricks.nd_grid object at 0x7fed462dae10>, 'r_': <numpy.lib.index_tricks.RClass object at 0x7fed46301f28>, 'c_': <numpy.lib.index_tricks.CClass object at 0x7fed46301f98>, 's_': <numpy.lib.index_tricks.IndexExpression object at 0x7fed462890b8>, 'index_exp': <numpy.lib.index_tricks.IndexExpression object at 0x7fed46289080>, 'ix_': <function ix_ at 0x7fed462dbc80>, 'ndenumerate': <class 'numpy.lib.index_tricks.ndenumerate'>, 'ndindex': <class 'numpy.lib.index_tricks.ndindex'>, 'fill_diagonal': <function fill_diagonal at 0x7fed46286ae8>, 'diag_indices': <function diag_indices at 0x7fed46288510>, 'diag_indices_from': <function diag_indices_from at 0x7fed46288598>, 'select': <function select at 0x7fed462fd620>, 'piecewise': <function piecewise at 0x7fed462fd598>, 'trim_zeros': <function trim_zeros at 0x7fed462fda60>, 'copy': <function copy at 0x7fed462fd6a8>, 'iterable': <function iterable at 0x7fed462edea0>, 'percentile': <function percentile at 0x7fed462febf8>, 'diff': <function diff at 0x7fed462fd7b8>, 'gradient': <function gradient at 0x7fed462fd730>, 'angle': <function angle at 0x7fed462fd8c8>, 'unwrap': <function unwrap at 0x7fed462fd950>, 'sort_complex': <function sort_complex at 0x7fed462fd9d8>, 'disp': <function disp at 0x7fed462fdd08>, 'flip': <function flip at 0x7fed462ede18>, 'rot90': <function rot90 at 0x7fed462ed488>, 'extract': <function extract at 0x7fed462fdbf8>, 'place': <function place at 0x7fed462fdc80>, 'vectorize': <class 'numpy.lib.function_base.vectorize'>, 'asarray_chkfinite': <function asarray_chkfinite at 0x7fed462fd510>, 'average': <function average at 0x7fed462fd488>, 'histogram': <function histogram at 0x7fed462fd378>, 'histogramdd': <function histogramdd at 0x7fed462fd400>, 'bincount': <built-in function bincount>, 'digitize': <built-in function digitize>, 'cov': <function cov at 0x7fed462fe0d0>, 'corrcoef': <function corrcoef at 0x7fed462fe400>, 'msort': <function msort at 0x7fed462fe9d8>, 'median': <function median at 0x7fed462feae8>, 'sinc': <function sinc at 0x7fed462fe950>, 'hamming': <function hamming at 0x7fed462fe620>, 'hanning': <function hanning at 0x7fed462fe598>, 'bartlett': <function bartlett at 0x7fed462fe510>, 'blackman': <function blackman at 0x7fed462fe488>, 'kaiser': <function kaiser at 0x7fed462fe8c8>, 'trapz': <function trapz at 0x7fed462fed08>, 'i0': <function i0 at 0x7fed462fe840>, 'add_newdoc': <function add_newdoc at 0x7fed462fed90>, 'add_docstring': <built-in function add_docstring>, 'meshgrid': <function meshgrid at 0x7fed462fee18>, 'delete': <function delete at 0x7fed462feea0>, 'insert': <function insert at 0x7fed462fef28>, 'append': <function append at 0x7fed462ff048>, 'interp': <function interp at 0x7fed462fd840>, 'add_newdoc_ufunc': <built-in function _add_newdoc_ufunc>, 'column_stack': <function column_stack at 0x7fed46296378>, 'row_stack': <function vstack at 0x7fed463d4400>, 'dstack': <function dstack at 0x7fed46296400>, 'array_split': <function array_split at 0x7fed46296510>, 'split': <function split at 0x7fed46296598>, 'hsplit': <function hsplit at 0x7fed46296620>, 'vsplit': <function vsplit at 0x7fed462966a8>, 'dsplit': <function dsplit at 0x7fed46296730>, 'apply_over_axes': <function apply_over_axes at 0x7fed46296268>, 'expand_dims': <function expand_dims at 0x7fed462962f0>, 'apply_along_axis': <function apply_along_axis at 0x7fed462961e0>, 'kron': <function kron at 0x7fed462968c8>, 'tile': <function tile at 0x7fed46296950>, 'get_array_wrap': <function get_array_wrap at 0x7fed46296840>, 'broadcast_to': <function broadcast_to at 0x7fed46286950>, 'broadcast_arrays': <function broadcast_arrays at 0x7fed46286a60>, 'diag': <function diag at 0x7fed462ed7b8>, 'diagflat': <function diagflat at 0x7fed462ed840>, 'eye': <function eye at 0x7fed462ed730>, 'fliplr': <function fliplr at 0x7fed462ed620>, 'flipud': <function flipud at 0x7fed462ed6a8>, 'tri': <function tri at 0x7fed462ed8c8>, 'triu': <function triu at 0x7fed462ed9d8>, 'tril': <function tril at 0x7fed462ed950>, 'vander': <function vander at 0x7fed462eda60>, 'histogram2d': <function histogram2d at 0x7fed462edae8>, 'mask_indices': <function mask_indices at 0x7fed462edb70>, 'tril_indices': <function tril_indices at 0x7fed462edbf8>, 'tril_indices_from': <function tril_indices_from at 0x7fed462edc80>, 'triu_indices': <function triu_indices at 0x7fed462edd08>, 'triu_indices_from': <function triu_indices_from at 0x7fed462edd90>, 'fix': <function fix at 0x7fed462db1e0>, 'isneginf': <function isneginf at 0x7fed462db400>, 'isposinf': <function isposinf at 0x7fed462db2f0>, 'pad': <function pad at 0x7fed45983950>, 'poly': <function poly at 0x7fed4629d268>, 'roots': <function roots at 0x7fed4629d378>, 'polyint': <function polyint at 0x7fed462b5048>, 'polyder': <function polyder at 0x7fed462b50d0>, 'polyadd': <function polyadd at 0x7fed462b5268>, 'polysub': <function polysub at 0x7fed462b52f0>, 'polymul': <function polymul at 0x7fed462b5378>, 'polydiv': <function polydiv at 0x7fed462b5400>, 'polyval': <function polyval at 0x7fed462b51e0>, 'poly1d': <class 'numpy.lib.polynomial.poly1d'>, 'polyfit': <function polyfit at 0x7fed462b5158>, 'RankWarning': <class 'numpy.lib.polynomial.RankWarning'>, 'issubclass_': <function issubclass_ at 0x7fed4646bd90>, 'issubsctype': <function issubsctype at 0x7fed4646be18>, 'deprecate': <function deprecate at 0x7fed4633f598>, 'deprecate_with_doc': <function <lambda> at 0x7fed4633f7b8>, 'get_include': <function get_include at 0x7fed4633f488>, 'info': <function info at 0x7fed4633fae8>, 'source': <function source at 0x7fed4633fb70>, 'who': <function who at 0x7fed4633f8c8>, 'lookfor': <function lookfor at 0x7fed4633fbf8>, 'byte_bounds': <function byte_bounds at 0x7fed4633f840>, 'safe_eval': <function safe_eval at 0x7fed4633fd90>, 'ediff1d': <function ediff1d at 0x7fed462b5510>, 'intersect1d': <function intersect1d at 0x7fed462b8730>, 'setxor1d': <function setxor1d at 0x7fed462b87b8>, 'union1d': <function union1d at 0x7fed462b8950>, 'setdiff1d': <function setdiff1d at 0x7fed462b89d8>, 'unique': <function unique at 0x7fed462b8620>, 'in1d': <function in1d at 0x7fed462b8840>, 'isin': <function isin at 0x7fed462b88c8>, 'savetxt': <function savetxt at 0x7fed45e3f840>, 'loadtxt': <function loadtxt at 0x7fed45e3f7b8>, 'genfromtxt': <function genfromtxt at 0x7fed45e3f950>, 'ndfromtxt': <function ndfromtxt at 0x7fed45e3f9d8>, 'mafromtxt': <function mafromtxt at 0x7fed45e3fa60>, 'recfromtxt': <function recfromtxt at 0x7fed45e3fae8>, 'recfromcsv': <function recfromcsv at 0x7fed45e3fb70>, 'save': <function save at 0x7fed45e3f510>, 'savez': <function savez at 0x7fed45e3f598>, 'savez_compressed': <function savez_compressed at 0x7fed45e3f620>, 'packbits': <built-in function packbits>, 'unpackbits': <built-in function unpackbits>, 'fromregex': <function fromregex at 0x7fed45e3f8c8>, 'DataSource': <class 'numpy.lib._datasource.DataSource'>, 'fv': <function fv at 0x7fed45e3fd08>, 'pmt': <function pmt at 0x7fed45e4a378>, 'nper': <function nper at 0x7fed45e4a400>, 'ipmt': <function ipmt at 0x7fed45e4a488>, 'ppmt': <function ppmt at 0x7fed45e4a598>, 'pv': <function pv at 0x7fed45e4a620>, 'rate': <function rate at 0x7fed45e4a730>, 'irr': <function irr at 0x7fed45e4a7b8>, 'npv': <function npv at 0x7fed45e4a840>, 'mirr': <function mirr at 0x7fed45e4a8c8>, 'nansum': <function nansum at 0x7fed462908c8>, 'nanmax': <function nanmax at 0x7fed46290730>, 'nanmin': <function nanmin at 0x7fed462906a8>, 'nanargmax': <function nanargmax at 0x7fed46290840>, 'nanargmin': <function nanargmin at 0x7fed462907b8>, 'nanmean': <function nanmean at 0x7fed46290ae8>, 'nanmedian': <function nanmedian at 0x7fed46290d08>, 'nanpercentile': <function nanpercentile at 0x7fed46290d90>, 'nanvar': <function nanvar at 0x7fed46290f28>, 'nanstd': <function nanstd at 0x7fed46296048>, 'nanprod': <function nanprod at 0x7fed46290950>, 'nancumsum': <function nancumsum at 0x7fed462909d8>, 'nancumprod': <function nancumprod at 0x7fed46290a60>, 'linalg': <module 'numpy.linalg' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/linalg/__init__.py'>, 'fft': <module 'numpy.fft' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/fft/__init__.py'>, 'random': <module 'numpy.random' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/random/__init__.py'>, 'ctypeslib': <module 'numpy.ctypeslib' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ctypeslib.py'>, 'ma': <module 'numpy.ma' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ma/__init__.py'>}
>>> print(vars())
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 'sys': <module 'sys' (built-in)>, 'add_newdocs': <module 'numpy.add_newdocs' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/add_newdocs.py'>, 'ModuleDeprecationWarning': <class 'numpy._globals.ModuleDeprecationWarning'>, 'VisibleDeprecationWarning': <class 'numpy._globals.VisibleDeprecationWarning'>, '__version__': '1.14.0', 'pkgload': <function pkgload at 0x7fed4e535e18>, 'PackageLoader': <class 'numpy._import_tools.PackageLoader'>, 'show_config': <function show at 0x7fed4cd99ae8>, 'char': <module 'numpy.core.defchararray' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/defchararray.py'>, 'rec': <module 'numpy.core.records' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/records.py'>, 'memmap': <class 'numpy.core.memmap.memmap'>, 'newaxis': None, 'ndarray': <class 'numpy.ndarray'>, 'flatiter': <class 'numpy.flatiter'>, 'nditer': <class 'numpy.nditer'>, 'nested_iters': <built-in function nested_iters>, 'ufunc': <class 'numpy.ufunc'>, 'arange': <built-in function arange>, 'array': <built-in function array>, 'zeros': <built-in function zeros>, 'count_nonzero': <function count_nonzero at 0x7fed46477730>, 'empty': <built-in function empty>, 'broadcast': <class 'numpy.broadcast'>, 'dtype': <class 'numpy.dtype'>, 'fromstring': <built-in function fromstring>, 'fromfile': <built-in function fromfile>, 'frombuffer': <built-in function frombuffer>, 'int_asbuffer': <built-in function int_asbuffer>, 'where': <built-in function where>, 'argwhere': <function argwhere at 0x7fed46477ae8>, 'copyto': <built-in function copyto>, 'concatenate': <built-in function concatenate>, 'fastCopyAndTranspose': <built-in function _fastCopyAndTranspose>, 'lexsort': <built-in function lexsort>, 'set_numeric_ops': <built-in function set_numeric_ops>, 'can_cast': <built-in function can_cast>, 'promote_types': <built-in function promote_types>, 'min_scalar_type': <built-in function min_scalar_type>, 'result_type': <built-in function result_type>, 'asarray': <function asarray at 0x7fed464777b8>, 'asanyarray': <function asanyarray at 0x7fed46477840>, 'ascontiguousarray': <function ascontiguousarray at 0x7fed464778c8>, 'asfortranarray': <function asfortranarray at 0x7fed46477950>, 'isfortran': <function isfortran at 0x7fed46477a60>, 'empty_like': <built-in function empty_like>, 'zeros_like': <function zeros_like at 0x7fed46477488>, 'ones_like': <function ones_like at 0x7fed46477598>, 'correlate': <function correlate at 0x7fed46477c80>, 'convolve': <function convolve at 0x7fed46477d08>, 'inner': <built-in function inner>, 'dot': <built-in function dot>, 'outer': <function outer at 0x7fed46477d90>, 'vdot': <built-in function vdot>, 'roll': <function roll at 0x7fed46477ea0>, 'rollaxis': <function rollaxis at 0x7fed46477f28>, 'moveaxis': <function moveaxis at 0x7fed464020d0>, 'cross': <function cross at 0x7fed464021e0>, 'tensordot': <function tensordot at 0x7fed46477e18>, 'little_endian': True, 'require': <function require at 0x7fed464779d8>, 'fromiter': <built-in function fromiter>, 'array_equal': <function array_equal at 0x7fed464027b8>, 'array_equiv': <function array_equiv at 0x7fed46402840>, 'indices': <function indices at 0x7fed46402268>, 'fromfunction': <function fromfunction at 0x7fed464022f0>, 'isclose': <function isclose at 0x7fed46402730>, 'load': <function load at 0x7fed45e3ed90>, 'loads': <built-in function loads>, 'isscalar': <function isscalar at 0x7fed46402378>, 'binary_repr': <function binary_repr at 0x7fed46402400>, 'base_repr': <function base_repr at 0x7fed46402488>, 'ones': <function ones at 0x7fed46477510>, 'identity': <function identity at 0x7fed46402620>, 'allclose': <function allclose at 0x7fed464026a8>, 'compare_chararrays': <built-in function compare_chararrays>, 'putmask': <built-in function putmask>, 'seterr': <function seterr at 0x7fed464028c8>, 'geterr': <function geterr at 0x7fed46402950>, 'setbufsize': <function setbufsize at 0x7fed464029d8>, 'getbufsize': <function getbufsize at 0x7fed46402a60>, 'seterrcall': <function seterrcall at 0x7fed46402ae8>, 'geterrcall': <function geterrcall at 0x7fed46402b70>, 'errstate': <class 'numpy.core.numeric.errstate'>, 'flatnonzero': <function flatnonzero at 0x7fed46477b70>, 'Inf': inf, 'inf': inf, 'infty': inf, 'Infinity': inf, 'nan': nan, 'NaN': nan, 'False_': False, 'True_': True, 'bitwise_not': <ufunc 'invert'>, 'CLIP': 0, 'RAISE': 2, 'WRAP': 1, 'MAXDIMS': 32, 'BUFSIZE': 8192, 'ALLOW_THREADS': 1, 'ComplexWarning': <class 'numpy.core.numeric.ComplexWarning'>, 'full': <function full at 0x7fed46477620>, 'full_like': <function full_like at 0x7fed464776a8>, 'matmul': <built-in function matmul>, 'shares_memory': <built-in function shares_memory>, 'may_share_memory': <built-in function may_share_memory>, 'MAY_SHARE_BOUNDS': 0, 'MAY_SHARE_EXACT': -1, 'TooHardError': <class 'numpy.core._internal.TooHardError'>, 'AxisError': <class 'numpy.core._internal.AxisError'>, 'alen': <function alen at 0x7fed46410950>, 'all': <function all at 0x7fed46410620>, 'alltrue': <function alltrue at 0x7fed46410510>, 'amax': <function amax at 0x7fed46410840>, 'amin': <function amin at 0x7fed464108c8>, 'any': <function any at 0x7fed46410598>, 'argmax': <function argmax at 0x7fed4640fc80>, 'argmin': <function argmin at 0x7fed4640fd08>, 'argpartition': <function argpartition at 0x7fed4640fae8>, 'argsort': <function argsort at 0x7fed4640fbf8>, 'around': <function around at 0x7fed46410c80>, 'choose': <function choose at 0x7fed4640f7b8>, 'clip': <function clip at 0x7fed464102f0>, 'compress': <function compress at 0x7fed46410268>, 'cumprod': <function cumprod at 0x7fed46410a60>, 'cumproduct': <function cumproduct at 0x7fed46410730>, 'cumsum': <function cumsum at 0x7fed464106a8>, 'diagonal': <function diagonal at 0x7fed4640ff28>, 'mean': <function mean at 0x7fed46410d90>, 'ndim': <function ndim at 0x7fed46410ae8>, 'nonzero': <function nonzero at 0x7fed46410158>, 'partition': <function partition at 0x7fed4640fa60>, 'prod': <function prod at 0x7fed464109d8>, 'product': <function product at 0x7fed46410400>, 'ptp': <function ptp at 0x7fed464107b8>, 'put': <function put at 0x7fed4640f8c8>, 'rank': <function rank at 0x7fed46410b70>, 'ravel': <function ravel at 0x7fed464100d0>, 'repeat': <function repeat at 0x7fed4640f840>, 'reshape': <function reshape at 0x7fed4640f730>, 'resize': <function resize at 0x7fed4640fe18>, 'round_': <function round_ at 0x7fed46410d08>, 'searchsorted': <function searchsorted at 0x7fed4640fd90>, 'shape': <function shape at 0x7fed464101e0>, 'size': <function size at 0x7fed46410bf8>, 'sometrue': <function sometrue at 0x7fed46410488>, 'sort': <function sort at 0x7fed4640fb70>, 'squeeze': <function squeeze at 0x7fed4640fea0>, 'std': <function std at 0x7fed46410e18>, 'sum': <function sum at 0x7fed46410378>, 'swapaxes': <function swapaxes at 0x7fed4640f950>, 'take': <function take at 0x7fed4640f6a8>, 'trace': <function trace at 0x7fed46410048>, 'transpose': <function transpose at 0x7fed4640f9d8>, 'var': <function var at 0x7fed46410ea0>, 'frompyfunc': <built-in function frompyfunc>, 'seterrobj': <built-in function seterrobj>, 'geterrobj': <built-in function geterrobj>, 'absolute': <ufunc 'absolute'>, 'add': <ufunc 'add'>, 'arccos': <ufunc 'arccos'>, 'arccosh': <ufunc 'arccosh'>, 'arcsin': <ufunc 'arcsin'>, 'arcsinh': <ufunc 'arcsinh'>, 'arctan': <ufunc 'arctan'>, 'arctan2': <ufunc 'arctan2'>, 'arctanh': <ufunc 'arctanh'>, 'bitwise_and': <ufunc 'bitwise_and'>, 'bitwise_or': <ufunc 'bitwise_or'>, 'bitwise_xor': <ufunc 'bitwise_xor'>, 'cbrt': <ufunc 'cbrt'>, 'ceil': <ufunc 'ceil'>, 'conjugate': <ufunc 'conjugate'>, 'copysign': <ufunc 'copysign'>, 'cos': <ufunc 'cos'>, 'cosh': <ufunc 'cosh'>, 'deg2rad': <ufunc 'deg2rad'>, 'degrees': <ufunc 'degrees'>, 'divmod': <ufunc 'divmod'>, 'equal': <ufunc 'equal'>, 'exp': <ufunc 'exp'>, 'exp2': <ufunc 'exp2'>, 'expm1': <ufunc 'expm1'>, 'fabs': <ufunc 'fabs'>, 'float_power': <ufunc 'float_power'>, 'floor': <ufunc 'floor'>, 'floor_divide': <ufunc 'floor_divide'>, 'fmax': <ufunc 'fmax'>, 'fmin': <ufunc 'fmin'>, 'fmod': <ufunc 'fmod'>, 'frexp': <ufunc 'frexp'>, 'greater': <ufunc 'greater'>, 'greater_equal': <ufunc 'greater_equal'>, 'heaviside': <ufunc 'heaviside'>, 'hypot': <ufunc 'hypot'>, 'invert': <ufunc 'invert'>, 'isfinite': <ufunc 'isfinite'>, 'isinf': <ufunc 'isinf'>, 'isnan': <ufunc 'isnan'>, 'isnat': <ufunc 'isnat'>, 'ldexp': <ufunc 'ldexp'>, 'left_shift': <ufunc 'left_shift'>, 'less': <ufunc 'less'>, 'less_equal': <ufunc 'less_equal'>, 'log': <ufunc 'log'>, 'log10': <ufunc 'log10'>, 'log1p': <ufunc 'log1p'>, 'log2': <ufunc 'log2'>, 'logaddexp': <ufunc 'logaddexp'>, 'logaddexp2': <ufunc 'logaddexp2'>, 'logical_and': <ufunc 'logical_and'>, 'logical_not': <ufunc 'logical_not'>, 'logical_or': <ufunc 'logical_or'>, 'logical_xor': <ufunc 'logical_xor'>, 'maximum': <ufunc 'maximum'>, 'minimum': <ufunc 'minimum'>, 'modf': <ufunc 'modf'>, 'multiply': <ufunc 'multiply'>, 'negative': <ufunc 'negative'>, 'nextafter': <ufunc 'nextafter'>, 'not_equal': <ufunc 'not_equal'>, 'positive': <ufunc 'positive'>, 'power': <ufunc 'power'>, 'rad2deg': <ufunc 'rad2deg'>, 'radians': <ufunc 'radians'>, 'reciprocal': <ufunc 'reciprocal'>, 'remainder': <ufunc 'remainder'>, 'right_shift': <ufunc 'right_shift'>, 'rint': <ufunc 'rint'>, 'sign': <ufunc 'sign'>, 'signbit': <ufunc 'signbit'>, 'sin': <ufunc 'sin'>, 'sinh': <ufunc 'sinh'>, 'spacing': <ufunc 'spacing'>, 'sqrt': <ufunc 'sqrt'>, 'square': <ufunc 'square'>, 'subtract': <ufunc 'subtract'>, 'tan': <ufunc 'tan'>, 'tanh': <ufunc 'tanh'>, 'true_divide': <ufunc 'true_divide'>, 'trunc': <ufunc 'trunc'>, 'pi': 3.141592653589793, 'e': 2.718281828459045, 'euler_gamma': 0.5772156649015329, 'ERR_IGNORE': 0, 'ERR_WARN': 1, 'ERR_CALL': 3, 'ERR_RAISE': 2, 'ERR_PRINT': 4, 'ERR_LOG': 5, 'ERR_DEFAULT': 521, 'SHIFT_DIVIDEBYZERO': 0, 'SHIFT_OVERFLOW': 3, 'SHIFT_UNDERFLOW': 6, 'SHIFT_INVALID': 9, 'FPE_DIVIDEBYZERO': 1, 'FPE_OVERFLOW': 2, 'FPE_UNDERFLOW': 4, 'FPE_INVALID': 8, 'FLOATING_POINT_SUPPORT': 1, 'UFUNC_PYVALS_NAME': 'UFUNC_PYVALS', 'UFUNC_BUFSIZE_DEFAULT': 8192, 'PINF': inf, 'NINF': -inf, 'PZERO': 0.0, 'NZERO': -0.0, 'NAN': nan, 'divide': <ufunc 'true_divide'>, 'conj': <ufunc 'conjugate'>, 'mod': <ufunc 'remainder'>, 'sctypeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'sctypeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'typeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'typeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'sctypes': {'int': [<class 'numpy.int8'>, <class 'numpy.int16'>, <class 'numpy.int32'>, <class 'numpy.int64'>], 'uint': [<class 'numpy.uint8'>, <class 'numpy.uint16'>, <class 'numpy.uint32'>, <class 'numpy.uint64'>], 'float': [<class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>], 'complex': [<class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>], 'others': [<class 'bool'>, <class 'object'>, <class 'bytes'>, <class 'str'>, <class 'numpy.void'>]}, 'ScalarType': (<class 'int'>, <class 'float'>, <class 'complex'>, <class 'int'>, <class 'bool'>, <class 'bytes'>, <class 'str'>, <class 'memoryview'>, <class 'numpy.bool_'>, <class 'numpy.int8'>, <class 'numpy.uint8'>, <class 'numpy.int16'>, <class 'numpy.uint16'>, <class 'numpy.int32'>, <class 'numpy.uint32'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>, <class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>, <class 'numpy.object_'>, <class 'numpy.bytes_'>, <class 'numpy.str_'>, <class 'numpy.void'>, <class 'numpy.datetime64'>, <class 'numpy.timedelta64'>), 'obj2sctype': <function obj2sctype at 0x7fed4646bd08>, 'cast': {<class 'numpy.bool_'>: <function <lambda> at 0x7fed46472158>, <class 'numpy.int8'>: <function <lambda> at 0x7fed464721e0>, <class 'numpy.uint8'>: <function <lambda> at 0x7fed46472268>, <class 'numpy.int16'>: <function <lambda> at 0x7fed464722f0>, <class 'numpy.uint16'>: <function <lambda> at 0x7fed46472378>, <class 'numpy.int32'>: <function <lambda> at 0x7fed46472400>, <class 'numpy.uint32'>: <function <lambda> at 0x7fed46472488>, <class 'numpy.int64'>: <function <lambda> at 0x7fed46472510>, <class 'numpy.uint64'>: <function <lambda> at 0x7fed46472598>, <class 'numpy.int64'>: <function <lambda> at 0x7fed46472620>, <class 'numpy.uint64'>: <function <lambda> at 0x7fed464726a8>, <class 'numpy.float16'>: <function <lambda> at 0x7fed46472730>, <class 'numpy.float32'>: <function <lambda> at 0x7fed464727b8>, <class 'numpy.float64'>: <function <lambda> at 0x7fed46472840>, <class 'numpy.float128'>: <function <lambda> at 0x7fed464728c8>, <class 'numpy.complex64'>: <function <lambda> at 0x7fed46472950>, <class 'numpy.complex128'>: <function <lambda> at 0x7fed464729d8>, <class 'numpy.complex256'>: <function <lambda> at 0x7fed46472a60>, <class 'numpy.object_'>: <function <lambda> at 0x7fed46472ae8>, <class 'numpy.bytes_'>: <function <lambda> at 0x7fed46472b70>, <class 'numpy.str_'>: <function <lambda> at 0x7fed46472bf8>, <class 'numpy.void'>: <function <lambda> at 0x7fed46472c80>, <class 'numpy.datetime64'>: <function <lambda> at 0x7fed46472d08>, <class 'numpy.timedelta64'>: <function <lambda> at 0x7fed46472d90>}, 'nbytes': {<class 'numpy.bool_'>: 1, <class 'numpy.int8'>: 1, <class 'numpy.uint8'>: 1, <class 'numpy.int16'>: 2, <class 'numpy.uint16'>: 2, <class 'numpy.int32'>: 4, <class 'numpy.uint32'>: 4, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.float16'>: 2, <class 'numpy.float32'>: 4, <class 'numpy.float64'>: 8, <class 'numpy.float128'>: 16, <class 'numpy.complex64'>: 8, <class 'numpy.complex128'>: 16, <class 'numpy.complex256'>: 32, <class 'numpy.object_'>: 8, <class 'numpy.bytes_'>: 0, <class 'numpy.str_'>: 0, <class 'numpy.void'>: 0, <class 'numpy.datetime64'>: 8, <class 'numpy.timedelta64'>: 8}, 'sctype2char': <function sctype2char at 0x7fed464720d0>, 'maximum_sctype': <function maximum_sctype at 0x7fed4646bbf8>, 'issctype': <function issctype at 0x7fed4646bc80>, 'typecodes': {'Character': 'c', 'Integer': 'bhilqp', 'UnsignedInteger': 'BHILQP', 'Float': 'efdg', 'Complex': 'FDG', 'AllInteger': 'bBhHiIlLqQpP', 'AllFloat': 'efdgFDG', 'Datetime': 'Mm', 'All': '?bhilqpBHILQPefdgFDGSUVOMm'}, 'find_common_type': <function find_common_type at 0x7fed464687b8>, 'issubdtype': <function issubdtype at 0x7fed4646bea0>, 'datetime_data': <built-in function datetime_data>, 'datetime_as_string': <built-in function datetime_as_string>, 'busday_offset': <built-in function busday_offset>, 'busday_count': <built-in function busday_count>, 'is_busday': <built-in function is_busday>, 'busdaycalendar': <class 'numpy.busdaycalendar'>, 'byte': <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'uint': <class 'numpy.uint64'>, 'intp': <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'long': <class 'int'>, 'longlong': <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'double': <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'cdouble': <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'unicode': <class 'str'>, 'void': <class 'numpy.void'>, 'generic': <class 'numpy.generic'>, 'number': <class 'numpy.number'>, 'integer': <class 'numpy.integer'>, 'inexact': <class 'numpy.inexact'>, 'signedinteger': <class 'numpy.signedinteger'>, 'unsignedinteger': <class 'numpy.unsignedinteger'>, 'floating': <class 'numpy.floating'>, 'complexfloating': <class 'numpy.complexfloating'>, 'flexible': <class 'numpy.flexible'>, 'character': <class 'numpy.character'>, 'bool8': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'array2string': <function array2string at 0x7fed46416950>, 'array_str': <function array_str at 0x7fed46423d08>, 'array_repr': <function array_repr at 0x7fed46423c80>, 'set_string_function': <function set_string_function at 0x7fed46423d90>, 'set_printoptions': <function set_printoptions at 0x7fed46416488>, 'get_printoptions': <function get_printoptions at 0x7fed46416510>, 'format_float_positional': <function format_float_positional at 0x7fed46416f28>, 'format_float_scientific': <function format_float_scientific at 0x7fed46416bf8>, 'record': <class 'numpy.record'>, 'recarray': <class 'numpy.recarray'>, 'format_parser': <class 'numpy.core.records.format_parser'>, 'chararray': <class 'numpy.core.defchararray.chararray'>, 'logspace': <function logspace at 0x7fed463c4ea0>, 'linspace': <function linspace at 0x7fed463c4e18>, 'geomspace': <function geomspace at 0x7fed463c4f28>, 'MachAr': <class 'numpy.core.machar.MachAr'>, 'finfo': <class 'numpy.core.getlimits.finfo'>, 'iinfo': <class 'numpy.core.getlimits.iinfo'>, 'atleast_1d': <function atleast_1d at 0x7fed463c8d08>, 'atleast_2d': <function atleast_2d at 0x7fed463d42f0>, 'atleast_3d': <function atleast_3d at 0x7fed463d4378>, 'block': <function block at 0x7fed463d46a8>, 'hstack': <function hstack at 0x7fed463d4488>, 'stack': <function stack at 0x7fed463d4510>, 'vstack': <function vstack at 0x7fed463d4400>, 'einsum': <function einsum at 0x7fed463d4b70>, 'einsum_path': <function einsum_path at 0x7fed463d4ae8>, 'matrix': <class 'numpy.matrixlib.defmatrix.matrix'>, 'bmat': <function bmat at 0x7fed46286620>, 'mat': <function asmatrix at 0x7fed462ff2f0>, 'asmatrix': <function asmatrix at 0x7fed462ff2f0>, 'emath': <module 'numpy.lib.scimath' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/lib/scimath.py'>, 'math': <module 'math' (built-in)>, 'tracemalloc_domain': 389047, 'iscomplexobj': <function iscomplexobj at 0x7fed462db730>, 'isrealobj': <function isrealobj at 0x7fed462db7b8>, 'imag': <function imag at 0x7fed462db598>, 'iscomplex': <function iscomplex at 0x7fed462db620>, 'isreal': <function isreal at 0x7fed462db6a8>, 'nan_to_num': <function nan_to_num at 0x7fed462db8c8>, 'real': <function real at 0x7fed462db510>, 'real_if_close': <function real_if_close at 0x7fed462db950>, 'typename': <function typename at 0x7fed462dba60>, 'asfarray': <function asfarray at 0x7fed462db488>, 'mintypecode': <function mintypecode at 0x7fed476e8a60>, 'asscalar': <function asscalar at 0x7fed462db9d8>, 'common_type': <function common_type at 0x7fed462dbae8>, 'ravel_multi_index': <built-in function ravel_multi_index>, 'unravel_index': <built-in function unravel_index>, 'mgrid': <numpy.lib.index_tricks.nd_grid object at 0x7fed462dada0>, 'ogrid': <numpy.lib.index_tricks.nd_grid object at 0x7fed462dae10>, 'r_': <numpy.lib.index_tricks.RClass object at 0x7fed46301f28>, 'c_': <numpy.lib.index_tricks.CClass object at 0x7fed46301f98>, 's_': <numpy.lib.index_tricks.IndexExpression object at 0x7fed462890b8>, 'index_exp': <numpy.lib.index_tricks.IndexExpression object at 0x7fed46289080>, 'ix_': <function ix_ at 0x7fed462dbc80>, 'ndenumerate': <class 'numpy.lib.index_tricks.ndenumerate'>, 'ndindex': <class 'numpy.lib.index_tricks.ndindex'>, 'fill_diagonal': <function fill_diagonal at 0x7fed46286ae8>, 'diag_indices': <function diag_indices at 0x7fed46288510>, 'diag_indices_from': <function diag_indices_from at 0x7fed46288598>, 'select': <function select at 0x7fed462fd620>, 'piecewise': <function piecewise at 0x7fed462fd598>, 'trim_zeros': <function trim_zeros at 0x7fed462fda60>, 'copy': <function copy at 0x7fed462fd6a8>, 'iterable': <function iterable at 0x7fed462edea0>, 'percentile': <function percentile at 0x7fed462febf8>, 'diff': <function diff at 0x7fed462fd7b8>, 'gradient': <function gradient at 0x7fed462fd730>, 'angle': <function angle at 0x7fed462fd8c8>, 'unwrap': <function unwrap at 0x7fed462fd950>, 'sort_complex': <function sort_complex at 0x7fed462fd9d8>, 'disp': <function disp at 0x7fed462fdd08>, 'flip': <function flip at 0x7fed462ede18>, 'rot90': <function rot90 at 0x7fed462ed488>, 'extract': <function extract at 0x7fed462fdbf8>, 'place': <function place at 0x7fed462fdc80>, 'vectorize': <class 'numpy.lib.function_base.vectorize'>, 'asarray_chkfinite': <function asarray_chkfinite at 0x7fed462fd510>, 'average': <function average at 0x7fed462fd488>, 'histogram': <function histogram at 0x7fed462fd378>, 'histogramdd': <function histogramdd at 0x7fed462fd400>, 'bincount': <built-in function bincount>, 'digitize': <built-in function digitize>, 'cov': <function cov at 0x7fed462fe0d0>, 'corrcoef': <function corrcoef at 0x7fed462fe400>, 'msort': <function msort at 0x7fed462fe9d8>, 'median': <function median at 0x7fed462feae8>, 'sinc': <function sinc at 0x7fed462fe950>, 'hamming': <function hamming at 0x7fed462fe620>, 'hanning': <function hanning at 0x7fed462fe598>, 'bartlett': <function bartlett at 0x7fed462fe510>, 'blackman': <function blackman at 0x7fed462fe488>, 'kaiser': <function kaiser at 0x7fed462fe8c8>, 'trapz': <function trapz at 0x7fed462fed08>, 'i0': <function i0 at 0x7fed462fe840>, 'add_newdoc': <function add_newdoc at 0x7fed462fed90>, 'add_docstring': <built-in function add_docstring>, 'meshgrid': <function meshgrid at 0x7fed462fee18>, 'delete': <function delete at 0x7fed462feea0>, 'insert': <function insert at 0x7fed462fef28>, 'append': <function append at 0x7fed462ff048>, 'interp': <function interp at 0x7fed462fd840>, 'add_newdoc_ufunc': <built-in function _add_newdoc_ufunc>, 'column_stack': <function column_stack at 0x7fed46296378>, 'row_stack': <function vstack at 0x7fed463d4400>, 'dstack': <function dstack at 0x7fed46296400>, 'array_split': <function array_split at 0x7fed46296510>, 'split': <function split at 0x7fed46296598>, 'hsplit': <function hsplit at 0x7fed46296620>, 'vsplit': <function vsplit at 0x7fed462966a8>, 'dsplit': <function dsplit at 0x7fed46296730>, 'apply_over_axes': <function apply_over_axes at 0x7fed46296268>, 'expand_dims': <function expand_dims at 0x7fed462962f0>, 'apply_along_axis': <function apply_along_axis at 0x7fed462961e0>, 'kron': <function kron at 0x7fed462968c8>, 'tile': <function tile at 0x7fed46296950>, 'get_array_wrap': <function get_array_wrap at 0x7fed46296840>, 'broadcast_to': <function broadcast_to at 0x7fed46286950>, 'broadcast_arrays': <function broadcast_arrays at 0x7fed46286a60>, 'diag': <function diag at 0x7fed462ed7b8>, 'diagflat': <function diagflat at 0x7fed462ed840>, 'eye': <function eye at 0x7fed462ed730>, 'fliplr': <function fliplr at 0x7fed462ed620>, 'flipud': <function flipud at 0x7fed462ed6a8>, 'tri': <function tri at 0x7fed462ed8c8>, 'triu': <function triu at 0x7fed462ed9d8>, 'tril': <function tril at 0x7fed462ed950>, 'vander': <function vander at 0x7fed462eda60>, 'histogram2d': <function histogram2d at 0x7fed462edae8>, 'mask_indices': <function mask_indices at 0x7fed462edb70>, 'tril_indices': <function tril_indices at 0x7fed462edbf8>, 'tril_indices_from': <function tril_indices_from at 0x7fed462edc80>, 'triu_indices': <function triu_indices at 0x7fed462edd08>, 'triu_indices_from': <function triu_indices_from at 0x7fed462edd90>, 'fix': <function fix at 0x7fed462db1e0>, 'isneginf': <function isneginf at 0x7fed462db400>, 'isposinf': <function isposinf at 0x7fed462db2f0>, 'pad': <function pad at 0x7fed45983950>, 'poly': <function poly at 0x7fed4629d268>, 'roots': <function roots at 0x7fed4629d378>, 'polyint': <function polyint at 0x7fed462b5048>, 'polyder': <function polyder at 0x7fed462b50d0>, 'polyadd': <function polyadd at 0x7fed462b5268>, 'polysub': <function polysub at 0x7fed462b52f0>, 'polymul': <function polymul at 0x7fed462b5378>, 'polydiv': <function polydiv at 0x7fed462b5400>, 'polyval': <function polyval at 0x7fed462b51e0>, 'poly1d': <class 'numpy.lib.polynomial.poly1d'>, 'polyfit': <function polyfit at 0x7fed462b5158>, 'RankWarning': <class 'numpy.lib.polynomial.RankWarning'>, 'issubclass_': <function issubclass_ at 0x7fed4646bd90>, 'issubsctype': <function issubsctype at 0x7fed4646be18>, 'deprecate': <function deprecate at 0x7fed4633f598>, 'deprecate_with_doc': <function <lambda> at 0x7fed4633f7b8>, 'get_include': <function get_include at 0x7fed4633f488>, 'info': <function info at 0x7fed4633fae8>, 'source': <function source at 0x7fed4633fb70>, 'who': <function who at 0x7fed4633f8c8>, 'lookfor': <function lookfor at 0x7fed4633fbf8>, 'byte_bounds': <function byte_bounds at 0x7fed4633f840>, 'safe_eval': <function safe_eval at 0x7fed4633fd90>, 'ediff1d': <function ediff1d at 0x7fed462b5510>, 'intersect1d': <function intersect1d at 0x7fed462b8730>, 'setxor1d': <function setxor1d at 0x7fed462b87b8>, 'union1d': <function union1d at 0x7fed462b8950>, 'setdiff1d': <function setdiff1d at 0x7fed462b89d8>, 'unique': <function unique at 0x7fed462b8620>, 'in1d': <function in1d at 0x7fed462b8840>, 'isin': <function isin at 0x7fed462b88c8>, 'savetxt': <function savetxt at 0x7fed45e3f840>, 'loadtxt': <function loadtxt at 0x7fed45e3f7b8>, 'genfromtxt': <function genfromtxt at 0x7fed45e3f950>, 'ndfromtxt': <function ndfromtxt at 0x7fed45e3f9d8>, 'mafromtxt': <function mafromtxt at 0x7fed45e3fa60>, 'recfromtxt': <function recfromtxt at 0x7fed45e3fae8>, 'recfromcsv': <function recfromcsv at 0x7fed45e3fb70>, 'save': <function save at 0x7fed45e3f510>, 'savez': <function savez at 0x7fed45e3f598>, 'savez_compressed': <function savez_compressed at 0x7fed45e3f620>, 'packbits': <built-in function packbits>, 'unpackbits': <built-in function unpackbits>, 'fromregex': <function fromregex at 0x7fed45e3f8c8>, 'DataSource': <class 'numpy.lib._datasource.DataSource'>, 'fv': <function fv at 0x7fed45e3fd08>, 'pmt': <function pmt at 0x7fed45e4a378>, 'nper': <function nper at 0x7fed45e4a400>, 'ipmt': <function ipmt at 0x7fed45e4a488>, 'ppmt': <function ppmt at 0x7fed45e4a598>, 'pv': <function pv at 0x7fed45e4a620>, 'rate': <function rate at 0x7fed45e4a730>, 'irr': <function irr at 0x7fed45e4a7b8>, 'npv': <function npv at 0x7fed45e4a840>, 'mirr': <function mirr at 0x7fed45e4a8c8>, 'nansum': <function nansum at 0x7fed462908c8>, 'nanmax': <function nanmax at 0x7fed46290730>, 'nanmin': <function nanmin at 0x7fed462906a8>, 'nanargmax': <function nanargmax at 0x7fed46290840>, 'nanargmin': <function nanargmin at 0x7fed462907b8>, 'nanmean': <function nanmean at 0x7fed46290ae8>, 'nanmedian': <function nanmedian at 0x7fed46290d08>, 'nanpercentile': <function nanpercentile at 0x7fed46290d90>, 'nanvar': <function nanvar at 0x7fed46290f28>, 'nanstd': <function nanstd at 0x7fed46296048>, 'nanprod': <function nanprod at 0x7fed46290950>, 'nancumsum': <function nancumsum at 0x7fed462909d8>, 'nancumprod': <function nancumprod at 0x7fed46290a60>, 'linalg': <module 'numpy.linalg' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/linalg/__init__.py'>, 'fft': <module 'numpy.fft' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/fft/__init__.py'>, 'random': <module 'numpy.random' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/random/__init__.py'>, 'ctypeslib': <module 'numpy.ctypeslib' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ctypeslib.py'>, 'ma': <module 'numpy.ma' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ma/__init__.py'>}
>>> from numpy import sin
>>> print(vars())
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 'sys': <module 'sys' (built-in)>, 'add_newdocs': <module 'numpy.add_newdocs' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/add_newdocs.py'>, 'ModuleDeprecationWarning': <class 'numpy._globals.ModuleDeprecationWarning'>, 'VisibleDeprecationWarning': <class 'numpy._globals.VisibleDeprecationWarning'>, '__version__': '1.14.0', 'pkgload': <function pkgload at 0x7fed4e535e18>, 'PackageLoader': <class 'numpy._import_tools.PackageLoader'>, 'show_config': <function show at 0x7fed4cd99ae8>, 'char': <module 'numpy.core.defchararray' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/defchararray.py'>, 'rec': <module 'numpy.core.records' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/records.py'>, 'memmap': <class 'numpy.core.memmap.memmap'>, 'newaxis': None, 'ndarray': <class 'numpy.ndarray'>, 'flatiter': <class 'numpy.flatiter'>, 'nditer': <class 'numpy.nditer'>, 'nested_iters': <built-in function nested_iters>, 'ufunc': <class 'numpy.ufunc'>, 'arange': <built-in function arange>, 'array': <built-in function array>, 'zeros': <built-in function zeros>, 'count_nonzero': <function count_nonzero at 0x7fed46477730>, 'empty': <built-in function empty>, 'broadcast': <class 'numpy.broadcast'>, 'dtype': <class 'numpy.dtype'>, 'fromstring': <built-in function fromstring>, 'fromfile': <built-in function fromfile>, 'frombuffer': <built-in function frombuffer>, 'int_asbuffer': <built-in function int_asbuffer>, 'where': <built-in function where>, 'argwhere': <function argwhere at 0x7fed46477ae8>, 'copyto': <built-in function copyto>, 'concatenate': <built-in function concatenate>, 'fastCopyAndTranspose': <built-in function _fastCopyAndTranspose>, 'lexsort': <built-in function lexsort>, 'set_numeric_ops': <built-in function set_numeric_ops>, 'can_cast': <built-in function can_cast>, 'promote_types': <built-in function promote_types>, 'min_scalar_type': <built-in function min_scalar_type>, 'result_type': <built-in function result_type>, 'asarray': <function asarray at 0x7fed464777b8>, 'asanyarray': <function asanyarray at 0x7fed46477840>, 'ascontiguousarray': <function ascontiguousarray at 0x7fed464778c8>, 'asfortranarray': <function asfortranarray at 0x7fed46477950>, 'isfortran': <function isfortran at 0x7fed46477a60>, 'empty_like': <built-in function empty_like>, 'zeros_like': <function zeros_like at 0x7fed46477488>, 'ones_like': <function ones_like at 0x7fed46477598>, 'correlate': <function correlate at 0x7fed46477c80>, 'convolve': <function convolve at 0x7fed46477d08>, 'inner': <built-in function inner>, 'dot': <built-in function dot>, 'outer': <function outer at 0x7fed46477d90>, 'vdot': <built-in function vdot>, 'roll': <function roll at 0x7fed46477ea0>, 'rollaxis': <function rollaxis at 0x7fed46477f28>, 'moveaxis': <function moveaxis at 0x7fed464020d0>, 'cross': <function cross at 0x7fed464021e0>, 'tensordot': <function tensordot at 0x7fed46477e18>, 'little_endian': True, 'require': <function require at 0x7fed464779d8>, 'fromiter': <built-in function fromiter>, 'array_equal': <function array_equal at 0x7fed464027b8>, 'array_equiv': <function array_equiv at 0x7fed46402840>, 'indices': <function indices at 0x7fed46402268>, 'fromfunction': <function fromfunction at 0x7fed464022f0>, 'isclose': <function isclose at 0x7fed46402730>, 'load': <function load at 0x7fed45e3ed90>, 'loads': <built-in function loads>, 'isscalar': <function isscalar at 0x7fed46402378>, 'binary_repr': <function binary_repr at 0x7fed46402400>, 'base_repr': <function base_repr at 0x7fed46402488>, 'ones': <function ones at 0x7fed46477510>, 'identity': <function identity at 0x7fed46402620>, 'allclose': <function allclose at 0x7fed464026a8>, 'compare_chararrays': <built-in function compare_chararrays>, 'putmask': <built-in function putmask>, 'seterr': <function seterr at 0x7fed464028c8>, 'geterr': <function geterr at 0x7fed46402950>, 'setbufsize': <function setbufsize at 0x7fed464029d8>, 'getbufsize': <function getbufsize at 0x7fed46402a60>, 'seterrcall': <function seterrcall at 0x7fed46402ae8>, 'geterrcall': <function geterrcall at 0x7fed46402b70>, 'errstate': <class 'numpy.core.numeric.errstate'>, 'flatnonzero': <function flatnonzero at 0x7fed46477b70>, 'Inf': inf, 'inf': inf, 'infty': inf, 'Infinity': inf, 'nan': nan, 'NaN': nan, 'False_': False, 'True_': True, 'bitwise_not': <ufunc 'invert'>, 'CLIP': 0, 'RAISE': 2, 'WRAP': 1, 'MAXDIMS': 32, 'BUFSIZE': 8192, 'ALLOW_THREADS': 1, 'ComplexWarning': <class 'numpy.core.numeric.ComplexWarning'>, 'full': <function full at 0x7fed46477620>, 'full_like': <function full_like at 0x7fed464776a8>, 'matmul': <built-in function matmul>, 'shares_memory': <built-in function shares_memory>, 'may_share_memory': <built-in function may_share_memory>, 'MAY_SHARE_BOUNDS': 0, 'MAY_SHARE_EXACT': -1, 'TooHardError': <class 'numpy.core._internal.TooHardError'>, 'AxisError': <class 'numpy.core._internal.AxisError'>, 'alen': <function alen at 0x7fed46410950>, 'all': <function all at 0x7fed46410620>, 'alltrue': <function alltrue at 0x7fed46410510>, 'amax': <function amax at 0x7fed46410840>, 'amin': <function amin at 0x7fed464108c8>, 'any': <function any at 0x7fed46410598>, 'argmax': <function argmax at 0x7fed4640fc80>, 'argmin': <function argmin at 0x7fed4640fd08>, 'argpartition': <function argpartition at 0x7fed4640fae8>, 'argsort': <function argsort at 0x7fed4640fbf8>, 'around': <function around at 0x7fed46410c80>, 'choose': <function choose at 0x7fed4640f7b8>, 'clip': <function clip at 0x7fed464102f0>, 'compress': <function compress at 0x7fed46410268>, 'cumprod': <function cumprod at 0x7fed46410a60>, 'cumproduct': <function cumproduct at 0x7fed46410730>, 'cumsum': <function cumsum at 0x7fed464106a8>, 'diagonal': <function diagonal at 0x7fed4640ff28>, 'mean': <function mean at 0x7fed46410d90>, 'ndim': <function ndim at 0x7fed46410ae8>, 'nonzero': <function nonzero at 0x7fed46410158>, 'partition': <function partition at 0x7fed4640fa60>, 'prod': <function prod at 0x7fed464109d8>, 'product': <function product at 0x7fed46410400>, 'ptp': <function ptp at 0x7fed464107b8>, 'put': <function put at 0x7fed4640f8c8>, 'rank': <function rank at 0x7fed46410b70>, 'ravel': <function ravel at 0x7fed464100d0>, 'repeat': <function repeat at 0x7fed4640f840>, 'reshape': <function reshape at 0x7fed4640f730>, 'resize': <function resize at 0x7fed4640fe18>, 'round_': <function round_ at 0x7fed46410d08>, 'searchsorted': <function searchsorted at 0x7fed4640fd90>, 'shape': <function shape at 0x7fed464101e0>, 'size': <function size at 0x7fed46410bf8>, 'sometrue': <function sometrue at 0x7fed46410488>, 'sort': <function sort at 0x7fed4640fb70>, 'squeeze': <function squeeze at 0x7fed4640fea0>, 'std': <function std at 0x7fed46410e18>, 'sum': <function sum at 0x7fed46410378>, 'swapaxes': <function swapaxes at 0x7fed4640f950>, 'take': <function take at 0x7fed4640f6a8>, 'trace': <function trace at 0x7fed46410048>, 'transpose': <function transpose at 0x7fed4640f9d8>, 'var': <function var at 0x7fed46410ea0>, 'frompyfunc': <built-in function frompyfunc>, 'seterrobj': <built-in function seterrobj>, 'geterrobj': <built-in function geterrobj>, 'absolute': <ufunc 'absolute'>, 'add': <ufunc 'add'>, 'arccos': <ufunc 'arccos'>, 'arccosh': <ufunc 'arccosh'>, 'arcsin': <ufunc 'arcsin'>, 'arcsinh': <ufunc 'arcsinh'>, 'arctan': <ufunc 'arctan'>, 'arctan2': <ufunc 'arctan2'>, 'arctanh': <ufunc 'arctanh'>, 'bitwise_and': <ufunc 'bitwise_and'>, 'bitwise_or': <ufunc 'bitwise_or'>, 'bitwise_xor': <ufunc 'bitwise_xor'>, 'cbrt': <ufunc 'cbrt'>, 'ceil': <ufunc 'ceil'>, 'conjugate': <ufunc 'conjugate'>, 'copysign': <ufunc 'copysign'>, 'cos': <ufunc 'cos'>, 'cosh': <ufunc 'cosh'>, 'deg2rad': <ufunc 'deg2rad'>, 'degrees': <ufunc 'degrees'>, 'divmod': <ufunc 'divmod'>, 'equal': <ufunc 'equal'>, 'exp': <ufunc 'exp'>, 'exp2': <ufunc 'exp2'>, 'expm1': <ufunc 'expm1'>, 'fabs': <ufunc 'fabs'>, 'float_power': <ufunc 'float_power'>, 'floor': <ufunc 'floor'>, 'floor_divide': <ufunc 'floor_divide'>, 'fmax': <ufunc 'fmax'>, 'fmin': <ufunc 'fmin'>, 'fmod': <ufunc 'fmod'>, 'frexp': <ufunc 'frexp'>, 'greater': <ufunc 'greater'>, 'greater_equal': <ufunc 'greater_equal'>, 'heaviside': <ufunc 'heaviside'>, 'hypot': <ufunc 'hypot'>, 'invert': <ufunc 'invert'>, 'isfinite': <ufunc 'isfinite'>, 'isinf': <ufunc 'isinf'>, 'isnan': <ufunc 'isnan'>, 'isnat': <ufunc 'isnat'>, 'ldexp': <ufunc 'ldexp'>, 'left_shift': <ufunc 'left_shift'>, 'less': <ufunc 'less'>, 'less_equal': <ufunc 'less_equal'>, 'log': <ufunc 'log'>, 'log10': <ufunc 'log10'>, 'log1p': <ufunc 'log1p'>, 'log2': <ufunc 'log2'>, 'logaddexp': <ufunc 'logaddexp'>, 'logaddexp2': <ufunc 'logaddexp2'>, 'logical_and': <ufunc 'logical_and'>, 'logical_not': <ufunc 'logical_not'>, 'logical_or': <ufunc 'logical_or'>, 'logical_xor': <ufunc 'logical_xor'>, 'maximum': <ufunc 'maximum'>, 'minimum': <ufunc 'minimum'>, 'modf': <ufunc 'modf'>, 'multiply': <ufunc 'multiply'>, 'negative': <ufunc 'negative'>, 'nextafter': <ufunc 'nextafter'>, 'not_equal': <ufunc 'not_equal'>, 'positive': <ufunc 'positive'>, 'power': <ufunc 'power'>, 'rad2deg': <ufunc 'rad2deg'>, 'radians': <ufunc 'radians'>, 'reciprocal': <ufunc 'reciprocal'>, 'remainder': <ufunc 'remainder'>, 'right_shift': <ufunc 'right_shift'>, 'rint': <ufunc 'rint'>, 'sign': <ufunc 'sign'>, 'signbit': <ufunc 'signbit'>, 'sin': <ufunc 'sin'>, 'sinh': <ufunc 'sinh'>, 'spacing': <ufunc 'spacing'>, 'sqrt': <ufunc 'sqrt'>, 'square': <ufunc 'square'>, 'subtract': <ufunc 'subtract'>, 'tan': <ufunc 'tan'>, 'tanh': <ufunc 'tanh'>, 'true_divide': <ufunc 'true_divide'>, 'trunc': <ufunc 'trunc'>, 'pi': 3.141592653589793, 'e': 2.718281828459045, 'euler_gamma': 0.5772156649015329, 'ERR_IGNORE': 0, 'ERR_WARN': 1, 'ERR_CALL': 3, 'ERR_RAISE': 2, 'ERR_PRINT': 4, 'ERR_LOG': 5, 'ERR_DEFAULT': 521, 'SHIFT_DIVIDEBYZERO': 0, 'SHIFT_OVERFLOW': 3, 'SHIFT_UNDERFLOW': 6, 'SHIFT_INVALID': 9, 'FPE_DIVIDEBYZERO': 1, 'FPE_OVERFLOW': 2, 'FPE_UNDERFLOW': 4, 'FPE_INVALID': 8, 'FLOATING_POINT_SUPPORT': 1, 'UFUNC_PYVALS_NAME': 'UFUNC_PYVALS', 'UFUNC_BUFSIZE_DEFAULT': 8192, 'PINF': inf, 'NINF': -inf, 'PZERO': 0.0, 'NZERO': -0.0, 'NAN': nan, 'divide': <ufunc 'true_divide'>, 'conj': <ufunc 'conjugate'>, 'mod': <ufunc 'remainder'>, 'sctypeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'sctypeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'typeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'typeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'sctypes': {'int': [<class 'numpy.int8'>, <class 'numpy.int16'>, <class 'numpy.int32'>, <class 'numpy.int64'>], 'uint': [<class 'numpy.uint8'>, <class 'numpy.uint16'>, <class 'numpy.uint32'>, <class 'numpy.uint64'>], 'float': [<class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>], 'complex': [<class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>], 'others': [<class 'bool'>, <class 'object'>, <class 'bytes'>, <class 'str'>, <class 'numpy.void'>]}, 'ScalarType': (<class 'int'>, <class 'float'>, <class 'complex'>, <class 'int'>, <class 'bool'>, <class 'bytes'>, <class 'str'>, <class 'memoryview'>, <class 'numpy.bool_'>, <class 'numpy.int8'>, <class 'numpy.uint8'>, <class 'numpy.int16'>, <class 'numpy.uint16'>, <class 'numpy.int32'>, <class 'numpy.uint32'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>, <class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>, <class 'numpy.object_'>, <class 'numpy.bytes_'>, <class 'numpy.str_'>, <class 'numpy.void'>, <class 'numpy.datetime64'>, <class 'numpy.timedelta64'>), 'obj2sctype': <function obj2sctype at 0x7fed4646bd08>, 'cast': {<class 'numpy.bool_'>: <function <lambda> at 0x7fed46472158>, <class 'numpy.int8'>: <function <lambda> at 0x7fed464721e0>, <class 'numpy.uint8'>: <function <lambda> at 0x7fed46472268>, <class 'numpy.int16'>: <function <lambda> at 0x7fed464722f0>, <class 'numpy.uint16'>: <function <lambda> at 0x7fed46472378>, <class 'numpy.int32'>: <function <lambda> at 0x7fed46472400>, <class 'numpy.uint32'>: <function <lambda> at 0x7fed46472488>, <class 'numpy.int64'>: <function <lambda> at 0x7fed46472510>, <class 'numpy.uint64'>: <function <lambda> at 0x7fed46472598>, <class 'numpy.int64'>: <function <lambda> at 0x7fed46472620>, <class 'numpy.uint64'>: <function <lambda> at 0x7fed464726a8>, <class 'numpy.float16'>: <function <lambda> at 0x7fed46472730>, <class 'numpy.float32'>: <function <lambda> at 0x7fed464727b8>, <class 'numpy.float64'>: <function <lambda> at 0x7fed46472840>, <class 'numpy.float128'>: <function <lambda> at 0x7fed464728c8>, <class 'numpy.complex64'>: <function <lambda> at 0x7fed46472950>, <class 'numpy.complex128'>: <function <lambda> at 0x7fed464729d8>, <class 'numpy.complex256'>: <function <lambda> at 0x7fed46472a60>, <class 'numpy.object_'>: <function <lambda> at 0x7fed46472ae8>, <class 'numpy.bytes_'>: <function <lambda> at 0x7fed46472b70>, <class 'numpy.str_'>: <function <lambda> at 0x7fed46472bf8>, <class 'numpy.void'>: <function <lambda> at 0x7fed46472c80>, <class 'numpy.datetime64'>: <function <lambda> at 0x7fed46472d08>, <class 'numpy.timedelta64'>: <function <lambda> at 0x7fed46472d90>}, 'nbytes': {<class 'numpy.bool_'>: 1, <class 'numpy.int8'>: 1, <class 'numpy.uint8'>: 1, <class 'numpy.int16'>: 2, <class 'numpy.uint16'>: 2, <class 'numpy.int32'>: 4, <class 'numpy.uint32'>: 4, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.float16'>: 2, <class 'numpy.float32'>: 4, <class 'numpy.float64'>: 8, <class 'numpy.float128'>: 16, <class 'numpy.complex64'>: 8, <class 'numpy.complex128'>: 16, <class 'numpy.complex256'>: 32, <class 'numpy.object_'>: 8, <class 'numpy.bytes_'>: 0, <class 'numpy.str_'>: 0, <class 'numpy.void'>: 0, <class 'numpy.datetime64'>: 8, <class 'numpy.timedelta64'>: 8}, 'sctype2char': <function sctype2char at 0x7fed464720d0>, 'maximum_sctype': <function maximum_sctype at 0x7fed4646bbf8>, 'issctype': <function issctype at 0x7fed4646bc80>, 'typecodes': {'Character': 'c', 'Integer': 'bhilqp', 'UnsignedInteger': 'BHILQP', 'Float': 'efdg', 'Complex': 'FDG', 'AllInteger': 'bBhHiIlLqQpP', 'AllFloat': 'efdgFDG', 'Datetime': 'Mm', 'All': '?bhilqpBHILQPefdgFDGSUVOMm'}, 'find_common_type': <function find_common_type at 0x7fed464687b8>, 'issubdtype': <function issubdtype at 0x7fed4646bea0>, 'datetime_data': <built-in function datetime_data>, 'datetime_as_string': <built-in function datetime_as_string>, 'busday_offset': <built-in function busday_offset>, 'busday_count': <built-in function busday_count>, 'is_busday': <built-in function is_busday>, 'busdaycalendar': <class 'numpy.busdaycalendar'>, 'byte': <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'uint': <class 'numpy.uint64'>, 'intp': <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'long': <class 'int'>, 'longlong': <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'double': <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'cdouble': <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'unicode': <class 'str'>, 'void': <class 'numpy.void'>, 'generic': <class 'numpy.generic'>, 'number': <class 'numpy.number'>, 'integer': <class 'numpy.integer'>, 'inexact': <class 'numpy.inexact'>, 'signedinteger': <class 'numpy.signedinteger'>, 'unsignedinteger': <class 'numpy.unsignedinteger'>, 'floating': <class 'numpy.floating'>, 'complexfloating': <class 'numpy.complexfloating'>, 'flexible': <class 'numpy.flexible'>, 'character': <class 'numpy.character'>, 'bool8': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'array2string': <function array2string at 0x7fed46416950>, 'array_str': <function array_str at 0x7fed46423d08>, 'array_repr': <function array_repr at 0x7fed46423c80>, 'set_string_function': <function set_string_function at 0x7fed46423d90>, 'set_printoptions': <function set_printoptions at 0x7fed46416488>, 'get_printoptions': <function get_printoptions at 0x7fed46416510>, 'format_float_positional': <function format_float_positional at 0x7fed46416f28>, 'format_float_scientific': <function format_float_scientific at 0x7fed46416bf8>, 'record': <class 'numpy.record'>, 'recarray': <class 'numpy.recarray'>, 'format_parser': <class 'numpy.core.records.format_parser'>, 'chararray': <class 'numpy.core.defchararray.chararray'>, 'logspace': <function logspace at 0x7fed463c4ea0>, 'linspace': <function linspace at 0x7fed463c4e18>, 'geomspace': <function geomspace at 0x7fed463c4f28>, 'MachAr': <class 'numpy.core.machar.MachAr'>, 'finfo': <class 'numpy.core.getlimits.finfo'>, 'iinfo': <class 'numpy.core.getlimits.iinfo'>, 'atleast_1d': <function atleast_1d at 0x7fed463c8d08>, 'atleast_2d': <function atleast_2d at 0x7fed463d42f0>, 'atleast_3d': <function atleast_3d at 0x7fed463d4378>, 'block': <function block at 0x7fed463d46a8>, 'hstack': <function hstack at 0x7fed463d4488>, 'stack': <function stack at 0x7fed463d4510>, 'vstack': <function vstack at 0x7fed463d4400>, 'einsum': <function einsum at 0x7fed463d4b70>, 'einsum_path': <function einsum_path at 0x7fed463d4ae8>, 'matrix': <class 'numpy.matrixlib.defmatrix.matrix'>, 'bmat': <function bmat at 0x7fed46286620>, 'mat': <function asmatrix at 0x7fed462ff2f0>, 'asmatrix': <function asmatrix at 0x7fed462ff2f0>, 'emath': <module 'numpy.lib.scimath' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/lib/scimath.py'>, 'math': <module 'math' (built-in)>, 'tracemalloc_domain': 389047, 'iscomplexobj': <function iscomplexobj at 0x7fed462db730>, 'isrealobj': <function isrealobj at 0x7fed462db7b8>, 'imag': <function imag at 0x7fed462db598>, 'iscomplex': <function iscomplex at 0x7fed462db620>, 'isreal': <function isreal at 0x7fed462db6a8>, 'nan_to_num': <function nan_to_num at 0x7fed462db8c8>, 'real': <function real at 0x7fed462db510>, 'real_if_close': <function real_if_close at 0x7fed462db950>, 'typename': <function typename at 0x7fed462dba60>, 'asfarray': <function asfarray at 0x7fed462db488>, 'mintypecode': <function mintypecode at 0x7fed476e8a60>, 'asscalar': <function asscalar at 0x7fed462db9d8>, 'common_type': <function common_type at 0x7fed462dbae8>, 'ravel_multi_index': <built-in function ravel_multi_index>, 'unravel_index': <built-in function unravel_index>, 'mgrid': <numpy.lib.index_tricks.nd_grid object at 0x7fed462dada0>, 'ogrid': <numpy.lib.index_tricks.nd_grid object at 0x7fed462dae10>, 'r_': <numpy.lib.index_tricks.RClass object at 0x7fed46301f28>, 'c_': <numpy.lib.index_tricks.CClass object at 0x7fed46301f98>, 's_': <numpy.lib.index_tricks.IndexExpression object at 0x7fed462890b8>, 'index_exp': <numpy.lib.index_tricks.IndexExpression object at 0x7fed46289080>, 'ix_': <function ix_ at 0x7fed462dbc80>, 'ndenumerate': <class 'numpy.lib.index_tricks.ndenumerate'>, 'ndindex': <class 'numpy.lib.index_tricks.ndindex'>, 'fill_diagonal': <function fill_diagonal at 0x7fed46286ae8>, 'diag_indices': <function diag_indices at 0x7fed46288510>, 'diag_indices_from': <function diag_indices_from at 0x7fed46288598>, 'select': <function select at 0x7fed462fd620>, 'piecewise': <function piecewise at 0x7fed462fd598>, 'trim_zeros': <function trim_zeros at 0x7fed462fda60>, 'copy': <function copy at 0x7fed462fd6a8>, 'iterable': <function iterable at 0x7fed462edea0>, 'percentile': <function percentile at 0x7fed462febf8>, 'diff': <function diff at 0x7fed462fd7b8>, 'gradient': <function gradient at 0x7fed462fd730>, 'angle': <function angle at 0x7fed462fd8c8>, 'unwrap': <function unwrap at 0x7fed462fd950>, 'sort_complex': <function sort_complex at 0x7fed462fd9d8>, 'disp': <function disp at 0x7fed462fdd08>, 'flip': <function flip at 0x7fed462ede18>, 'rot90': <function rot90 at 0x7fed462ed488>, 'extract': <function extract at 0x7fed462fdbf8>, 'place': <function place at 0x7fed462fdc80>, 'vectorize': <class 'numpy.lib.function_base.vectorize'>, 'asarray_chkfinite': <function asarray_chkfinite at 0x7fed462fd510>, 'average': <function average at 0x7fed462fd488>, 'histogram': <function histogram at 0x7fed462fd378>, 'histogramdd': <function histogramdd at 0x7fed462fd400>, 'bincount': <built-in function bincount>, 'digitize': <built-in function digitize>, 'cov': <function cov at 0x7fed462fe0d0>, 'corrcoef': <function corrcoef at 0x7fed462fe400>, 'msort': <function msort at 0x7fed462fe9d8>, 'median': <function median at 0x7fed462feae8>, 'sinc': <function sinc at 0x7fed462fe950>, 'hamming': <function hamming at 0x7fed462fe620>, 'hanning': <function hanning at 0x7fed462fe598>, 'bartlett': <function bartlett at 0x7fed462fe510>, 'blackman': <function blackman at 0x7fed462fe488>, 'kaiser': <function kaiser at 0x7fed462fe8c8>, 'trapz': <function trapz at 0x7fed462fed08>, 'i0': <function i0 at 0x7fed462fe840>, 'add_newdoc': <function add_newdoc at 0x7fed462fed90>, 'add_docstring': <built-in function add_docstring>, 'meshgrid': <function meshgrid at 0x7fed462fee18>, 'delete': <function delete at 0x7fed462feea0>, 'insert': <function insert at 0x7fed462fef28>, 'append': <function append at 0x7fed462ff048>, 'interp': <function interp at 0x7fed462fd840>, 'add_newdoc_ufunc': <built-in function _add_newdoc_ufunc>, 'column_stack': <function column_stack at 0x7fed46296378>, 'row_stack': <function vstack at 0x7fed463d4400>, 'dstack': <function dstack at 0x7fed46296400>, 'array_split': <function array_split at 0x7fed46296510>, 'split': <function split at 0x7fed46296598>, 'hsplit': <function hsplit at 0x7fed46296620>, 'vsplit': <function vsplit at 0x7fed462966a8>, 'dsplit': <function dsplit at 0x7fed46296730>, 'apply_over_axes': <function apply_over_axes at 0x7fed46296268>, 'expand_dims': <function expand_dims at 0x7fed462962f0>, 'apply_along_axis': <function apply_along_axis at 0x7fed462961e0>, 'kron': <function kron at 0x7fed462968c8>, 'tile': <function tile at 0x7fed46296950>, 'get_array_wrap': <function get_array_wrap at 0x7fed46296840>, 'broadcast_to': <function broadcast_to at 0x7fed46286950>, 'broadcast_arrays': <function broadcast_arrays at 0x7fed46286a60>, 'diag': <function diag at 0x7fed462ed7b8>, 'diagflat': <function diagflat at 0x7fed462ed840>, 'eye': <function eye at 0x7fed462ed730>, 'fliplr': <function fliplr at 0x7fed462ed620>, 'flipud': <function flipud at 0x7fed462ed6a8>, 'tri': <function tri at 0x7fed462ed8c8>, 'triu': <function triu at 0x7fed462ed9d8>, 'tril': <function tril at 0x7fed462ed950>, 'vander': <function vander at 0x7fed462eda60>, 'histogram2d': <function histogram2d at 0x7fed462edae8>, 'mask_indices': <function mask_indices at 0x7fed462edb70>, 'tril_indices': <function tril_indices at 0x7fed462edbf8>, 'tril_indices_from': <function tril_indices_from at 0x7fed462edc80>, 'triu_indices': <function triu_indices at 0x7fed462edd08>, 'triu_indices_from': <function triu_indices_from at 0x7fed462edd90>, 'fix': <function fix at 0x7fed462db1e0>, 'isneginf': <function isneginf at 0x7fed462db400>, 'isposinf': <function isposinf at 0x7fed462db2f0>, 'pad': <function pad at 0x7fed45983950>, 'poly': <function poly at 0x7fed4629d268>, 'roots': <function roots at 0x7fed4629d378>, 'polyint': <function polyint at 0x7fed462b5048>, 'polyder': <function polyder at 0x7fed462b50d0>, 'polyadd': <function polyadd at 0x7fed462b5268>, 'polysub': <function polysub at 0x7fed462b52f0>, 'polymul': <function polymul at 0x7fed462b5378>, 'polydiv': <function polydiv at 0x7fed462b5400>, 'polyval': <function polyval at 0x7fed462b51e0>, 'poly1d': <class 'numpy.lib.polynomial.poly1d'>, 'polyfit': <function polyfit at 0x7fed462b5158>, 'RankWarning': <class 'numpy.lib.polynomial.RankWarning'>, 'issubclass_': <function issubclass_ at 0x7fed4646bd90>, 'issubsctype': <function issubsctype at 0x7fed4646be18>, 'deprecate': <function deprecate at 0x7fed4633f598>, 'deprecate_with_doc': <function <lambda> at 0x7fed4633f7b8>, 'get_include': <function get_include at 0x7fed4633f488>, 'info': <function info at 0x7fed4633fae8>, 'source': <function source at 0x7fed4633fb70>, 'who': <function who at 0x7fed4633f8c8>, 'lookfor': <function lookfor at 0x7fed4633fbf8>, 'byte_bounds': <function byte_bounds at 0x7fed4633f840>, 'safe_eval': <function safe_eval at 0x7fed4633fd90>, 'ediff1d': <function ediff1d at 0x7fed462b5510>, 'intersect1d': <function intersect1d at 0x7fed462b8730>, 'setxor1d': <function setxor1d at 0x7fed462b87b8>, 'union1d': <function union1d at 0x7fed462b8950>, 'setdiff1d': <function setdiff1d at 0x7fed462b89d8>, 'unique': <function unique at 0x7fed462b8620>, 'in1d': <function in1d at 0x7fed462b8840>, 'isin': <function isin at 0x7fed462b88c8>, 'savetxt': <function savetxt at 0x7fed45e3f840>, 'loadtxt': <function loadtxt at 0x7fed45e3f7b8>, 'genfromtxt': <function genfromtxt at 0x7fed45e3f950>, 'ndfromtxt': <function ndfromtxt at 0x7fed45e3f9d8>, 'mafromtxt': <function mafromtxt at 0x7fed45e3fa60>, 'recfromtxt': <function recfromtxt at 0x7fed45e3fae8>, 'recfromcsv': <function recfromcsv at 0x7fed45e3fb70>, 'save': <function save at 0x7fed45e3f510>, 'savez': <function savez at 0x7fed45e3f598>, 'savez_compressed': <function savez_compressed at 0x7fed45e3f620>, 'packbits': <built-in function packbits>, 'unpackbits': <built-in function unpackbits>, 'fromregex': <function fromregex at 0x7fed45e3f8c8>, 'DataSource': <class 'numpy.lib._datasource.DataSource'>, 'fv': <function fv at 0x7fed45e3fd08>, 'pmt': <function pmt at 0x7fed45e4a378>, 'nper': <function nper at 0x7fed45e4a400>, 'ipmt': <function ipmt at 0x7fed45e4a488>, 'ppmt': <function ppmt at 0x7fed45e4a598>, 'pv': <function pv at 0x7fed45e4a620>, 'rate': <function rate at 0x7fed45e4a730>, 'irr': <function irr at 0x7fed45e4a7b8>, 'npv': <function npv at 0x7fed45e4a840>, 'mirr': <function mirr at 0x7fed45e4a8c8>, 'nansum': <function nansum at 0x7fed462908c8>, 'nanmax': <function nanmax at 0x7fed46290730>, 'nanmin': <function nanmin at 0x7fed462906a8>, 'nanargmax': <function nanargmax at 0x7fed46290840>, 'nanargmin': <function nanargmin at 0x7fed462907b8>, 'nanmean': <function nanmean at 0x7fed46290ae8>, 'nanmedian': <function nanmedian at 0x7fed46290d08>, 'nanpercentile': <function nanpercentile at 0x7fed46290d90>, 'nanvar': <function nanvar at 0x7fed46290f28>, 'nanstd': <function nanstd at 0x7fed46296048>, 'nanprod': <function nanprod at 0x7fed46290950>, 'nancumsum': <function nancumsum at 0x7fed462909d8>, 'nancumprod': <function nancumprod at 0x7fed46290a60>, 'linalg': <module 'numpy.linalg' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/linalg/__init__.py'>, 'fft': <module 'numpy.fft' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/fft/__init__.py'>, 'random': <module 'numpy.random' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/random/__init__.py'>, 'ctypeslib': <module 'numpy.ctypeslib' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ctypeslib.py'>, 'ma': <module 'numpy.ma' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ma/__init__.py'>}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>}
Traceback (most recent call last):
  File "/home/user/RTR105/TESTSNUMPY__1.py", line 6, in <module>
    from numpy import cos,limspace
ImportError: cannot import name 'limspace'
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>}
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7fa56212be18>}
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7fa56212be18>, 'x': array([0.        , 0.10144928, 0.20289855, 0.30434783, 0.4057971 ,
       0.50724638, 0.60869565, 0.71014493, 0.8115942 , 0.91304348,
       1.01449275, 1.11594203, 1.2173913 , 1.31884058, 1.42028986,
       1.52173913, 1.62318841, 1.72463768, 1.82608696, 1.92753623,
       2.02898551, 2.13043478, 2.23188406, 2.33333333, 2.43478261,
       2.53623188, 2.63768116, 2.73913043, 2.84057971, 2.94202899,
       3.04347826, 3.14492754, 3.24637681, 3.34782609, 3.44927536,
       3.55072464, 3.65217391, 3.75362319, 3.85507246, 3.95652174,
       4.05797101, 4.15942029, 4.26086957, 4.36231884, 4.46376812,
       4.56521739, 4.66666667, 4.76811594, 4.86956522, 4.97101449,
       5.07246377, 5.17391304, 5.27536232, 5.37681159, 5.47826087,
       5.57971014, 5.68115942, 5.7826087 , 5.88405797, 5.98550725,
       6.08695652, 6.1884058 , 6.28985507, 6.39130435, 6.49275362,
       6.5942029 , 6.69565217, 6.79710145, 6.89855072, 7.        ]), 'y': array([ 1.        ,  0.99485843,  0.97948661,  0.95404259,  0.91878803,
        0.87408545,  0.82039454,  0.7582674 ,  0.6883429 ,  0.61134007,
        0.52805076,  0.43933143,  0.3460944 ,  0.24929843,  0.1499389 ,
        0.04903752, -0.05236811, -0.15323524, -0.25252663, -0.34922125,
       -0.44232479, -0.53087984, -0.61397579, -0.69075814, -0.76043733,
       -0.82229685, -0.87570058, -0.92009937, -0.95503665, -0.98015317,
       -0.99519064, -0.99999444, -0.99451516, -0.97880915, -0.95303792,
       -0.91746648, -0.8724606 , -0.8184831 , -0.75608903, -0.68592   ,
       -0.60869756, -0.5252158 , -0.43633318, -0.34296369, -0.24606746,
       -0.14664089, -0.04570638,  0.05569812,  0.15652988,  0.25575202,
        0.35234423,  0.44531323,  0.53370302,  0.61660468,  0.6931657 ,
        0.76259881,  0.82419002,  0.87730597,  0.92140047,  0.95602009,
        0.98080883,  0.99551178,  0.99997776,  0.99416083,  0.97812081,
        0.95202265,  0.91613472,  0.87082605,  0.81656256,  0.75390225])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>}
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7ffb39e0be18>}
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7ffb39e0be18>, 'x': array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2,
       1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2. , 2.1, 2.2, 2.3, 2.4, 2.5,
       2.6, 2.7, 2.8, 2.9, 3. , 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8,
       3.9, 4. , 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5. , 5.1,
       5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6. , 6.1, 6.2, 6.3, 6.4,
       6.5, 6.6, 6.7, 6.8, 6.9, 7. ]), 'y': array([ 1.        ,  0.99500417,  0.98006658,  0.95533649,  0.92106099,
        0.87758256,  0.82533561,  0.76484219,  0.69670671,  0.62160997,
        0.54030231,  0.45359612,  0.36235775,  0.26749883,  0.16996714,
        0.0707372 , -0.02919952, -0.12884449, -0.22720209, -0.32328957,
       -0.41614684, -0.5048461 , -0.58850112, -0.66627602, -0.73739372,
       -0.80114362, -0.85688875, -0.90407214, -0.94222234, -0.97095817,
       -0.9899925 , -0.99913515, -0.99829478, -0.98747977, -0.96679819,
       -0.93645669, -0.89675842, -0.84810003, -0.79096771, -0.7259323 ,
       -0.65364362, -0.57482395, -0.49026082, -0.40079917, -0.30733287,
       -0.2107958 , -0.11215253, -0.01238866,  0.08749898,  0.18651237,
        0.28366219,  0.37797774,  0.46851667,  0.55437434,  0.63469288,
        0.70866977,  0.77556588,  0.83471278,  0.88551952,  0.92747843,
        0.96017029,  0.98326844,  0.9965421 ,  0.99985864,  0.99318492,
        0.97658763,  0.95023259,  0.91438315,  0.86939749,  0.8157251 ,
        0.75390225])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>}
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f715cb58e18>}
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f715cb58e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> x
array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ])
>>> x[0]
0.0
>>> x[4]
1.6
>>> x[10]
4.0
>>> x[1]
0.4
>>> y
array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f4df16ede18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f2c5c072e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

Warning (from warnings module):
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/font_manager.py", line 281
    'Matplotlib is building the font cache using fc-list. '
UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7fec310ebe18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7fa5c14b8ea0>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> print(plt.plot(x,y,color="RRGGBB"))
[<matplotlib.lines.Line2D object at 0x7fa58a0bbda0>]
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f485db4ae18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f73e9446e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f3d3626ce18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f482d35ee18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': "\nimport sys\nsys.path.append('/usr/local/anaconda3/lib/python3.6/site-packages')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n", '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7efc76492e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': "\nimport sys\nsys.path.append('/usr/local/anaconda3/lib/python3.6/site-packages')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n", '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7f1eb00c2e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': "\nimport sys\nsys.path.append('/usr/local/anaconda3/lib/python3.6/site-packages')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n", '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7fa0c00c1e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f80a1658e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f7eb9523e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7efc806cfe18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
>>> 
================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7f449e299e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'cos': <ufunc 'cos'>, 'linspace': <function linspace at 0x7ff324544e18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': '\nimport sys\nsys.path.append(\'/usr/local/anaconda3/lib/python3.6/site-packages\')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n(a)Grafiski attēlo funkcionālo sakarību lietojotPython bibliotēku\n matplotlib.pyplot from matplotlib import pyplot as plt\n(b)Uz grafika izveido tīklu –plt.grid()\n(c)Izveido uzrakstu uz horiontālās ass –plt.xlabel(\'x\')\n(d)Izveido uzrakstu uz vertikālās ass –plt.ylabel(\'f(x)\')\n(e)Izveido grafiku kopumā raksturojošo uzrakstu –plt.title(\'Funkcija$cos(x)$\')\n(f)Uzzīmē funkcionālās sakarības grafiku –plt.plot(x, y)\n(g)Uzzīmēto, bet neredzamo grafiku parāda uz ekrāna formas –plt.show()\n(h)Izpilda uzrakstīto skriptu – (taustiņš F5)\n\n\nfrom matplotlib import pyplot as plt\nplt.grid()\nplt.xlabel(\'x\')\nplt.ylabel(\'f(x)\')\nplt.ylabel(\'f(x)\')\nplt.title(\'Funkcija$cos(x)$\')\nplt.plot(x,y,color="#FF1588")\nplt.plot(x, y,"bo")\nplt.show()\n', '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7f81b00dee18>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': '\nimport sys\nsys.path.append(\'/usr/local/anaconda3/lib/python3.6/site-packages\')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n(a)Grafiski attēlo funkcionālo sakarību lietojotPython bibliotēku\n matplotlib.pyplot from matplotlib import pyplot as plt\n(b)Uz grafika izveido tīklu –plt.grid()\n(c)Izveido uzrakstu uz horiontālās ass –plt.xlabel(\'x\')\n(d)Izveido uzrakstu uz vertikālās ass –plt.ylabel(\'f(x)\')\n(e)Izveido grafiku kopumā raksturojošo uzrakstu –plt.title(\'Funkcija$cos(x)$\')\n(f)Uzzīmē funkcionālās sakarības grafiku –plt.plot(x, y)\n(g)Uzzīmēto, bet neredzamo grafiku parāda uz ekrāna formas –plt.show()\n(h)Izpilda uzrakstīto skriptu – (taustiņš F5)\n\n\nfrom matplotlib import pyplot as plt\nplt.grid()\nplt.xlabel(\'x\')\nplt.ylabel(\'f(x)\')\nplt.ylabel(\'f(x)\')\nplt.title(\'Funkcija$cos(x)$\')\nplt.plot(x,y,color="#FF1588")\nplt.plot(x, y,"bo")\nplt.show()\n', '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7f8d51853e18>, 'cos': <ufunc 'cos'>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ]), 'y1': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': '\nimport sys\nsys.path.append(\'/usr/local/anaconda3/lib/python3.6/site-packages\')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n(a)Grafiski attēlo funkcionālo sakarību lietojotPython bibliotēku\n matplotlib.pyplot from matplotlib import pyplot as plt\n(b)Uz grafika izveido tīklu –plt.grid()\n(c)Izveido uzrakstu uz horiontālās ass –plt.xlabel(\'x\')\n(d)Izveido uzrakstu uz vertikālās ass –plt.ylabel(\'f(x)\')\n(e)Izveido grafiku kopumā raksturojošo uzrakstu –plt.title(\'Funkcija$cos(x)$\')\n(f)Uzzīmē funkcionālās sakarības grafiku –plt.plot(x, y)\n(g)Uzzīmēto, bet neredzamo grafiku parāda uz ekrāna formas –plt.show()\n(h)Izpilda uzrakstīto skriptu – (taustiņš F5)\n\n\nfrom matplotlib import pyplot as plt\nplt.grid()\nplt.xlabel(\'x\')\nplt.ylabel(\'f(x)\')\nplt.ylabel(\'f(x)\')\nplt.title(\'Funkcija$cos(x)$\')\nplt.plot(x,y,color="#FF1588")\nplt.plot(x, y,"bo")\nplt.show()\n', '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7ff729cc4e18>, 'cos': <ufunc 'cos'>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ]), 'y1': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': '\nimport sys\nsys.path.append(\'/usr/local/anaconda3/lib/python3.6/site-packages\')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n(a)Grafiski attēlo funkcionālo sakarību lietojotPython bibliotēku\n matplotlib.pyplot from matplotlib import pyplot as plt\n(b)Uz grafika izveido tīklu –plt.grid()\n(c)Izveido uzrakstu uz horiontālās ass –plt.xlabel(\'x\')\n(d)Izveido uzrakstu uz vertikālās ass –plt.ylabel(\'f(x)\')\n(e)Izveido grafiku kopumā raksturojošo uzrakstu –plt.title(\'Funkcija$cos(x)$\')\n(f)Uzzīmē funkcionālās sakarības grafiku –plt.plot(x, y)\n(g)Uzzīmēto, bet neredzamo grafiku parāda uz ekrāna formas –plt.show()\n(h)Izpilda uzrakstīto skriptu – (taustiņš F5)\n\n\nfrom matplotlib import pyplot as plt\nplt.grid()\nplt.xlabel(\'x\')\nplt.ylabel(\'f(x)\')\nplt.ylabel(\'f(x)\')\nplt.title(\'Funkcija$cos(x)$\')\nplt.plot(x,y,color="#FF1588")\nplt.plot(x, y,"bo")\nplt.show()\n', '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7fb921ef6e18>, 'cos': <ufunc 'cos'>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ]), 'y1': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
Traceback (most recent call last):
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/colors.py", line 132, in to_rgba
    rgba = _colors_full_map.cache[c, alpha]
KeyError: ('FF0000', None)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/backends/backend_qt5agg.py", line 164, in __draw_idle_agg
    self.draw()
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/backends/backend_qt5agg.py", line 133, in draw
    super(FigureCanvasQTAggBase, self).draw()
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py", line 430, in draw
    self.figure.draw(self.renderer)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/figure.py", line 1299, in draw
    renderer, self, artists, self.suppressComposite)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/image.py", line 138, in _draw_list_compositing_images
    a.draw(renderer)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 2437, in draw
    mimage._draw_list_compositing_images(renderer, self, artists)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/image.py", line 138, in _draw_list_compositing_images
    a.draw(renderer)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/lines.py", line 767, in draw
    ln_color_rgba = self._get_rgba_ln_color()
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/lines.py", line 1269, in _get_rgba_ln_color
    return mcolors.to_rgba(self._color, self._alpha)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/colors.py", line 134, in to_rgba
    rgba = _to_rgba_no_colorcycle(c, alpha)
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/colors.py", line 178, in _to_rgba_no_colorcycle
    raise ValueError("Invalid RGBA argument: {!r}".format(orig_c))
ValueError: Invalid RGBA argument: 'FF0000'

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': '\nimport sys\nsys.path.append(\'/usr/local/anaconda3/lib/python3.6/site-packages\')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n(a)Grafiski attēlo funkcionālo sakarību lietojotPython bibliotēku\n matplotlib.pyplot from matplotlib import pyplot as plt\n(b)Uz grafika izveido tīklu –plt.grid()\n(c)Izveido uzrakstu uz horiontālās ass –plt.xlabel(\'x\')\n(d)Izveido uzrakstu uz vertikālās ass –plt.ylabel(\'f(x)\')\n(e)Izveido grafiku kopumā raksturojošo uzrakstu –plt.title(\'Funkcija$cos(x)$\')\n(f)Uzzīmē funkcionālās sakarības grafiku –plt.plot(x, y)\n(g)Uzzīmēto, bet neredzamo grafiku parāda uz ekrāna formas –plt.show()\n(h)Izpilda uzrakstīto skriptu – (taustiņš F5)\n\n\nfrom matplotlib import pyplot as plt\nplt.grid()\nplt.xlabel(\'x\')\nplt.ylabel(\'f(x)\')\nplt.ylabel(\'f(x)\')\nplt.title(\'Funkcija$cos(x)$\')\nplt.plot(x,y,color="#FF1588")\nplt.plot(x, y,"bo")\nplt.show()\n', '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7fefa00c6e18>, 'cos': <ufunc 'cos'>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ]), 'y1': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}

================ RESTART: /home/user/RTR105/TESTSNUMPY__1.py ================
{'__name__': '__main__', '__doc__': '\nimport sys\nsys.path.append(\'/usr/local/anaconda3/lib/python3.6/site-packages\')\n\n#print(vars())\n\nfrom numpy import cos,linspace\n\n#print(vars())\n\n#x=linspace(0,7,70) # solis =(7-0)/(70-1)\nx=linspace(0, 4, 11) # solis =(4-0)/(11-1)\ny=cos(x)                \nprint(vars())\n\n\n(a)Grafiski attēlo funkcionālo sakarību lietojotPython bibliotēku\n matplotlib.pyplot from matplotlib import pyplot as plt\n(b)Uz grafika izveido tīklu –plt.grid()\n(c)Izveido uzrakstu uz horiontālās ass –plt.xlabel(\'x\')\n(d)Izveido uzrakstu uz vertikālās ass –plt.ylabel(\'f(x)\')\n(e)Izveido grafiku kopumā raksturojošo uzrakstu –plt.title(\'Funkcija$cos(x)$\')\n(f)Uzzīmē funkcionālās sakarības grafiku –plt.plot(x, y)\n(g)Uzzīmēto, bet neredzamo grafiku parāda uz ekrāna formas –plt.show()\n(h)Izpilda uzrakstīto skriptu – (taustiņš F5)\n\n\nfrom matplotlib import pyplot as plt\nplt.grid()\nplt.xlabel(\'x\')\nplt.ylabel(\'f(x)\')\nplt.ylabel(\'f(x)\')\nplt.title(\'Funkcija$cos(x)$\')\nplt.plot(x,y,color="#FF1588")\nplt.plot(x, y,"bo")\nplt.show()\n', '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/user/RTR105/TESTSNUMPY__1.py', 'sys': <module 'sys' (built-in)>, 'sin': <ufunc 'sin'>, 'linspace': <function linspace at 0x7f3759f7ae18>, 'cos': <ufunc 'cos'>, 'x': array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]), 'y': array([ 0.        ,  0.38941834,  0.71735609,  0.93203909,  0.9995736 ,
        0.90929743,  0.67546318,  0.33498815, -0.05837414, -0.44252044,
       -0.7568025 ]), 'y1': array([ 1.        ,  0.92106099,  0.69670671,  0.36235775, -0.02919952,
       -0.41614684, -0.73739372, -0.94222234, -0.99829478, -0.89675842,
       -0.65364362])}
